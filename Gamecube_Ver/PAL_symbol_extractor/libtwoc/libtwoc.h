#ifndef _libtwoc_h_
#define _libtwoc_h_
#include "common.h"
#include "string.h"
#include "stdio.h"
#include "nufile.h"
#include "math.h"
#include "stdlib.h"
#include "edobj.h"
#include "play_lists.h"
#include "edpp.h"
#include "model_lists.h"
#include "edmain.h"
#include "gc_exi.h"
#include "gc_gba.h"
#include "gc_os.h"
#include "gc_vi.h"
#include "edbits.h"
#include "edanim.h"
#include "edgra.h"
#include "gc_gs.h"
#include "gc_ss.h"
#include "gc_gx.h"
#include "gc_init.h"
#include "gc_db.h"
#include "edfile.h"
#include "gc_ppcm.h"
#include "gc_am.h"
#include "gc_dvd.h"
#include "gc_si.h"
#include "gc_card.h"
#include "gc_dtk.h"
#include "gc_arq.h"
#include "gc_ai.h"
#include "gc_mix.h"
#include "gc_ax.h"
#include "gc_sp.h"
#include "gc_ar.h"
#include "ctype.h"
#include "gc_dsp.h"
extern unk __CTOR_LIST__;
extern unk __DTOR_LIST__;
extern unk _f_bss;
extern unk __bss_start;
extern unk __bss_end;
extern unk _e_bss;
extern unk __SDATA_START__;
extern unk _SDA_BASE_;
extern unk _SDA2_BASE_;
extern unk _f_sbss;
extern unk __sbss_start;
extern unk __sbss_end;
extern unk _e_sbss;
extern unk __SBSS_END__;
extern unk __SDATA2_START__;
extern unk __SBSS2_END__;
extern unk _stack_end;
extern unk _stack_addr;
extern unk __ArenaLo;
extern unk __ArenaHi;
extern unk AIType;
extern unk AITab;
extern unk LEVELAICOUNT;
extern unk LEVELAITYPES;
extern unk LevelAIType;
extern unk DRAINWAWADY;
extern unk DrainDamage_Intro;
extern unk temp_creature_i;
extern unk punchpos1;
extern unk punchpos2;
extern unk weather_attack_on;
extern unk fire_attack_on;
extern unk earth_attack_on;
extern unk water_attack_on;
extern unk CrunchTime_Intro;
extern unk crunchtime_phase1tab;
extern unk crunchtime_phase2tab;
extern unk crunchtime_phase3tab;
extern unk crunchtime_phase4tab;
extern unk SpaceCortex_Defeated;
extern unk ai_lookpos;
extern unk tbuf;
extern unk LevelFileName;
extern unk Chase;
extern unk CRemap;
extern s32 Level;
extern unk Rail;
extern unk gempath_RPos;
extern unk temp_iRAIL;
extern unk temp_iALONG;
extern unk temp_fALONG;
extern unk bonus_restart;
extern unk Character;
extern unk player;
extern unk CModel;
extern unk NuTrigTable;
extern unk GameCam;
extern unk gamesfx_effect_volume;
extern unk GDeb;
extern unk debkeydata;
extern unk v001;
extern unk Game;
extern unk Hub;
extern unk boss_dead;
extern unk jcrunch;
extern unk ObjTab;
extern unk Paused;
extern unk world_scene;
extern unk v000;
extern unk temp_xrot;
extern unk temp_zrot;
extern unk plr_crates;
extern unk DESTRUCTIBLECRATECOUNT;
extern unk gamesfx_pitch;
extern f32 YTOL;
extern unk BugArea;
extern unk BugAnim;
extern unk buglight_enable;
extern unk SplTab;
extern unk LBIT;
extern unk GemPath;
extern unk VEHICLECONTROL;
extern unk best_cRPos;
extern unk FRAMES;
extern unk FRAME;
extern unk NORMALCAMERAHEIGHT;
extern unk CAMTOCRASH1;
extern unk CAMTOCRASH2;
extern unk CAMTOSUB;
extern unk SIDECAMDISTANCE;
extern unk CAMTOJEEP;
extern unk CAMHEIGHT;
extern unk CAMSTOPNEAR;
extern unk CAMSTOPFAR;
extern unk ATLASCAMHEIGHT;
extern unk temp_rail_end;
extern unk LOGOCAMX;
extern unk LOGOCAMY;
extern unk LOGOCAMZ;
extern unk tInPlatRail;
extern unk tInCamRail;
extern unk tLeftRail;
extern unk tCamRail;
extern unk tRightRail;
extern unk tOutCamRail;
extern unk tOutPlatRail;
extern unk tRailExt;
extern unk nRAILS;
extern unk temp_fACROSS;
extern unk cRPos;
extern unk temp_cRPos;
extern unk cRPosCOUNT;
extern unk temp_best_cRPos;
extern unk temp_cRPosCOUNT;
extern unk TempRPos;
extern unk cc1;
extern unk cc2;
extern unk cc3;
extern unk BOSSCAMPOS;
extern unk BOSSCAMPOS2;
extern unk pVIS;
extern unk cut_on;
extern unk pNuCam;
extern unk iVIS;
extern unk best_railangle;
extern unk pCam;
extern unk Bonus;
extern unk Death;
extern unk set_cutscenecammtx;
extern unk cutscenecammtx;
extern unk PLAYERCOUNT;
extern unk TempAnim;
extern unk level_part_2;
extern unk Cursor;
extern unk GameMode;
extern unk vtog_time;
extern unk vtog_duration;
extern unk vtog_blend;
extern unk pVTog;
extern unk pos_START;
extern unk GameTimer;
extern unk ResetAtlasCamera;
extern unk JeepvObj;
extern unk JeepvPos;
extern unk WesternCountdown;
extern unk GlobalTimer;
extern unk death_pCAM;
extern unk iTEMP;
extern unk bonus_duration;
extern unk bonus_time;
extern unk bonus_pCAM;
extern unk death_time;
extern unk death_duration;
extern unk gempath_time;
extern unk gempath_duration;
extern unk gempath_pCAM;
extern unk campos_SPACE;
extern unk CData;
extern unk cutcampos_FRONTEND;
extern unk cutcamlook_FRONTEND;
extern unk Pad;
extern unk LIGHTCHASECHARACTERS;
extern unk chase_midpos;
extern unk LDATA;
extern unk ShadNorm;
extern unk LivesLost;
extern unk USELIGHTS;
extern unk jonframe1;
extern unk tmtx;
extern unk temp_action;
extern unk temp_time;
extern unk MAXCLOUDSIZE;
extern unk CLOUDRNG;
extern unk PARTICLESIZE;
extern unk cloudmtl;
extern unk cloudGobj;
extern unk grscale;
extern unk grvel;
extern unk groff;
extern unk grphase;
extern unk grphaserate;
extern unk marker_crate;
extern unk flash_crate;
extern unk lock_crate;
extern unk LockCrate;
extern unk locked_crate;
extern unk triggerorigin_crate;
extern unk triggerdest_crate;
extern unk highlight_crate;
extern unk highlighted_crate;
extern unk current_selected_crate;
extern unk CRATEGROUPCOUNT;
extern unk CRATECOUNT;
extern unk num_crates_used;
extern unk CRATEGRAVITY;
extern unk CRATEHOPSPEED;
extern unk METALCRATEBOUNCESPEED;
extern unk JUMPONCRATEBREAKSPEED;
extern unk FALLONCRATEBREAKSPEED;
extern unk plr_invisibility_time;
extern unk crate_list;
extern unk MarkerCrate;
extern unk HighlightCrate;
extern unk FlashCrate;
extern unk CrateGroup;
extern unk Crate;
extern unk DRAWCRATESHADOWS;
extern unk temp_pGroup;
extern unk temp_pCrate;
extern unk i_cratetypedata;
extern unk CrateTypeData;
extern unk last_questionmark_extralife;
extern unk temp_crate_bounce;
extern unk tntsfxtime;
extern unk CHANGERPITCH;
extern unk CHANGERVOLUME;
extern unk SFX_CHANGER;
extern unk DESTRUCTIBLEBONUSCRATECOUNT;
extern unk uvs;
extern unk BoxExpList;
extern unk iBOXEXP;
extern unk CRATEEXPLOSIONFRAMES;
extern unk CrateMat2;
extern unk CrateMat;
extern unk temp_crate_type;
extern unk CRATEBALLOONOFFSET;
extern unk CRATEBALLOONRADIUS;
extern unk temp_ratio;
extern unk temp_face;
extern unk cp_goto;
extern unk cpGOTO;
extern unk temp_crate_y_ceiling_adjust;
extern unk temp_crate_y_floor_adjust;
extern unk temp_crate_xz_adjust;
extern unk crate_scene;
extern unk TimeTrial;
extern unk vNEWMASK;
extern unk mask_crates;
extern unk newmask_advise;
extern unk TimeTrialWait;
extern unk glass_enabled;
extern unk WATERBOSSGLASSMIX;
extern unk glass_mix;
extern unk glass_col_mix;
extern unk glass_col_enabled;
extern unk cp_iRAIL;
extern unk cp_iALONG;
extern unk TerSurface;
extern unk EShadY;
extern unk vTEMP;
extern unk IDLEWAIT;
extern unk plr_died;
extern unk c_slot;
extern unk AIVISRANGE;
extern unk total_char_loadtime;
extern unk CLetter;
extern unk SMOKEYSPEED;
extern unk SMOKEYBOOSTSPEED;
extern unk OFFROADERSEEK;
extern unk plr_terrain_ok;
extern unk plr_allow_jump;
extern unk LIGHTCREATURES;
extern unk plr_render;
extern unk jeep_draw;
extern unk jointnum;
extern unk glass_draw;
extern unk glass_phase;
extern unk DRAWCREATURESHADOWS;
extern unk HUBREFLECTY;
extern unk ATLASPLAYERLIFT;
extern unk temp_surface_xrot;
extern unk temp_surface_yrot;
extern unk temp_surface_zrot;
extern unk temp_anim_speed;
extern unk cpPOS;
extern unk plr_rebound;
extern unk Demo;
extern unk force_panel_items_update;
extern unk force_panel_wumpa_update;
extern unk force_panel_crate_update;
extern unk force_panel_lives_update;
extern unk point_time;
extern unk check_duration;
extern unk check_time;
extern unk point_duration;
extern unk new_mode;
extern unk new_level;
extern unk plr_bonus_wumpas;
extern unk bonus_wumpa_delay;
extern unk bonus_wumpa_wait;
extern unk save_bonus_crates_destroyed;
extern unk bonus_finish_frame;
extern unk bonus_crates_wait;
extern unk bonus_lives;
extern unk bonus_life_delay;
extern unk bonus_lives_wait;
extern unk plr_lives;
extern unk Adventure;
extern unk clock_ok;
extern unk plr_items;
extern unk bonusgem_ok;
extern unk gamecut;
extern unk SpaceGameCutTab;
extern u8* superbuffer_ptr;
extern unk crash_loaded;
extern unk Font3DObjTab;
extern unk force_decal;
extern unk CrashMoveInfo;
extern unk CocoMoveInfo;
extern unk MineCartMoveInfo;
extern unk DefaultMoveInfo;
extern unk gamecut_hack;
extern unk last_hub;
extern unk last_level;
extern unk cutpos_CRASH;
extern unk cutang_CRASH;
extern unk LData;
extern unk tumble_time;
extern unk tumble_action;
extern unk tumble_duration;
extern unk Mask;
extern unk plr_wumpas;
extern unk SAFEY;
extern unk demopad;
extern unk plr_vehicle_time;
extern unk plr_vehicle_speedmul;
extern unk ScooterMoveInfo;
extern unk SnowBoardMoveInfo;
extern unk MechMoveInfo;
extern unk FireEngineMoveInfo;
extern unk GyroMoveInfo;
extern unk SubmarineMoveInfo;
extern unk MineTubMoveInfo;
extern unk OffRoaderMoveInfo;
extern unk SwimmingMoveInfo;
extern unk VEHICLETIME;
extern unk vtog_oldpos;
extern unk vtog_newpos;
extern unk vtog_angle;
extern unk new_lev_flags;
extern unk tumble_item_starttime;
extern unk temp_lev_flags;
extern unk tumble_cycleduration;
extern unk tumble_moveduration;
extern unk tumble_newpos;
extern unk tumble_oldpos;
extern unk tumble_hdg;
extern unk warp_level;
extern unk GRAVITY;
extern unk in_finish_range;
extern unk FireBossHoldPlayer;
extern unk fadeval;
extern unk SmokeyCountDownValue;
extern unk offroader_speedtime;
extern unk TERMINALVELOCITY;
extern unk plr_target_found;
extern unk plr_target_firepos;
extern unk plr_target_pos;
extern unk plr_target_dir;
extern unk MECHTARGETHACK;
extern unk BAZOOKATARGETHACK;
extern unk plr_target_sightpos;
extern unk plr_target_mtx;
extern unk plr_target_frame;
extern unk ExtraMoves;
extern unk in_speed;
extern unk in_s_friction;
extern unk in_f_friction;
extern unk LIFTPLAYER;
extern unk app_tbset;
extern unk NOTERRAINSTOP;
extern unk InvincibilityCHEAT;
extern unk loadsave_frame;
extern unk i_ring;
extern unk ChrisJointOveride;
extern unk ChrisJointList;
extern unk ChrisNumJoints;
extern unk ForceShader;
extern unk mTEMP;
extern unk SKELETALCRASH;
extern unk Credit;
extern unk credit_speed;
extern unk CREDITCOUNT;
extern unk credit_time;
extern unk logos_played;
extern unk TITLESTARTTIME;
extern unk TITLEFPS;
extern unk cutmovie_hold;
extern unk cutdir;
extern unk cutdircol;
extern unk cutambcol;
extern unk loadcut_chardatfile;
extern unk CutChar;
extern unk cutmovie;
extern unk cutworldix;
extern unk CutAudio;
extern unk chardatfilename;
extern unk hCutLoadScreenThread;
extern unk cut_loading_finished;
extern unk cut_load_framecount;
extern unk next_cut_movie;
extern unk cutpos_FRONTEND;
extern unk cutpos_SPACE;
extern unk gamecut_start;
extern unk gamecut_finished;
extern unk gamecut_newlevel;
extern unk gamecut_sfx;
extern unk music_volume;
extern unk pCutAnim;
extern unk cutang_FRONTEND;
extern unk cutang_SPACE;
extern unk CutAnim;
extern unk CutVortexAnim;
extern unk gamecut_hold;
extern unk CutTimer;
extern unk SPACEMASKADJUSTY;
extern unk FRONTENDCORTEXADJUSTY;
extern unk HUBHOLOSCALE;
extern unk GameCut_EARTH_CORTEX;
extern unk GameCut_EARTH_1STLEVEL;
extern unk GameCut_EARTH_2CRYSTALS;
extern unk GameCut_EARTH_4CRYSTALS;
extern unk GameCut_EARTH_BOSS;
extern unk GameCut_EARTH_AKUAKU;
extern unk GameCut_WATER_CORTEX;
extern unk GameCut_WATER_1STLEVEL;
extern unk GameCut_WATER_2CRYSTALS;
extern unk GameCut_WATER_4CRYSTALS;
extern unk GameCut_WATER_BOSS;
extern unk GameCut_FIRE_CORTEX;
extern unk GameCut_FIRE_1STLEVEL;
extern unk GameCut_FIRE_2CRYSTALS;
extern unk GameCut_FIRE_4CRYSTALS;
extern unk GameCut_FIRE_BOSS;
extern unk GameCut_WEATHER_CORTEX;
extern unk GameCut_WEATHER_1STLEVEL;
extern unk GameCut_WEATHER_2CRYSTALS;
extern unk GameCut_WEATHER_4CRYSTALS;
extern unk GameCut_WEATHER_BOSS;
extern unk GameCut_SPACE_1STLEVEL;
extern unk GameCut_SPACE_2CRYSTALS;
extern unk GameCut_SPACE_4CRYSTALS;
extern unk GameCut_SPACE_BOSS;
extern unk fade_rate;
extern unk gamesfx_channel;
extern unk world_scene2;
extern unk superbuffer_end;
extern unk tLOADING;
extern unk numtx_identity;
extern unk font3d_scene;
extern unk font3d_initialised;
extern unk pause_scene;
extern unk texanimbuff;
extern unk texanimbits;
extern unk SWIDTH;
extern unk PHYSICAL_SCREEN_X;
extern unk SHEIGHT;
extern unk PHYSICAL_SCREEN_Y;
extern unk DIVPANEL3DX;
extern unk DIVPANEL3DY;
extern unk global_camera;
extern unk PANEL3DMULX;
extern unk PANEL3DMULY;
extern unk fadehack;
extern unk cufps;
extern unk font3d_scene2;
extern unk rsfxJung;
extern unk rsfxpt;
extern unk rsfxcount;
extern unk HotRocks;
extern unk HotCoals;
extern unk HutList;
extern unk Deb3Emit;
extern unk Deb3Info;
extern unk rbclass;
extern unk firedrop;
extern unk deb3;
extern unk torndist;
extern unk debpt;
extern unk firedroppt;
extern unk dropfire;
extern unk hutexplode;
extern unk hutframe;
extern unk exroty;
extern unk subprop;
extern unk water1;
extern unk water2;
extern unk wdir;
extern unk wtimer;
extern unk lcrunch;
extern unk cmask;
extern unk dmask;
extern unk maskx;
extern unk masky;
extern unk maskoff;
extern unk maskrot;
extern unk rockpt;
extern unk floor1;
extern unk roof1;
extern unk roofon;
extern unk flooron;
extern unk H2OElec;
extern unk exkey;
extern unk maskpos;
extern unk ShadRoofY;
extern unk Font3DTab;
extern unk Font3DAccentTab;
extern unk Font3DMtlTab;
extern unk Font3DRemap;
extern unk FONT3DSIZE;
extern unk FONT3DYMUL;
extern unk FONT3D_JSCALEDX;
extern unk FONT3D_JSCALEX;
extern unk font3d_xright;
extern unk font3d_xmid;
extern unk font3d_dx;
extern unk font3d_dy;
extern unk font3d_xleft;
extern unk font3d_ybottom;
extern unk font3d_ymid;
extern unk font3d_ytop;
extern unk disable_safearea_clamp;
extern unk menu_pulsate;
extern unk nurndr_forced_mtl_table;
extern unk DestMenu;
extern unk SaveMenu;
extern unk BackMenu;
extern unk DEMOMENUS;
extern unk DemoLevel;
extern unk i_demolevel;
extern unk pause_dir;
extern unk v010;
extern unk proberot;
extern unk probecol;
extern unk probeon;
extern unk probey;
extern unk probetime;
extern unk temprotate;
extern unk probepos;
extern unk in_finish_pos;
extern unk probedpos;
extern unk probespk;
extern unk probepos2;
extern unk cortex_gameover_tab;
extern unk cortex_gameover_i;
extern unk cortex_continue_i;
extern unk cortex_quit_i;
extern unk temp_character;
extern unk temp_character2;
extern unk temp_character_action;
extern unk temp_character2_action;
extern unk tempanim_waitaudio;
extern unk tempanim_nextaction;
extern unk TempLights;
extern unk TempAnim2;
extern unk TempLights2;
extern unk gameover_hack;
extern unk DISCOXOFFSET;
extern unk HData;
extern unk HubLevelText;
extern unk HubLevelAngle;
extern unk hub_vr_xrot;
extern unk hub_vr_yrot;
extern unk hub_vr_level;
extern unk hub_vr_image;
extern unk hub_vr_scale;
extern unk hub_vr_newscale;
extern unk temp_hublevel;
extern unk temp_hub;
extern unk i_award;
extern unk Award;
extern unk tumble_character;
extern unk tumble_item_addtime;
extern unk last_character;
extern unk last_used_character;
extern unk hubmidpos;
extern unk hublevelopen;
extern unk FINISHRADIUSHUB;
extern unk FINISHRADIUSLEVEL;
extern unk finish_frame;
extern unk finish_frames;
extern unk HubLevel;
extern unk hubleveltext_pos;
extern unk HubLevel_available;
extern unk hubwarp_oldpos;
extern unk hubwarp_newpos;
extern unk hubleveltext_i;
extern unk hubleveltext_open;
extern unk hubleveltext_level;
extern unk hub_vr_pos;
extern unk AvalancheChaseData;
extern unk JungleRumbleChaseData;
extern unk TsunamiChaseData;
extern unk WizardsAndLizardsChaseData;
extern unk CrateBallsOfFireChaseData;
extern unk vtog_action;
extern unk VTog;
extern unk i_kaboom;
extern unk Kaboom;
extern unk Wumpa;
extern unk start_pos;
extern unk TT_RELICX;
extern unk TT_RELICY;
extern unk finish_type;
extern unk new_hub_flags;
extern unk finish_newpos;
extern unk finish_oldpos;
extern unk TimeTrialTimer;
extern unk newleveltime_slot;
extern unk CRATECOUNT3DSCALE;
extern unk CRATECOUNT3DSEPERATION;
extern unk GAMERAND;
extern unk qseed;
extern unk wumpa_a;
extern unk i_screenwumpa;
extern unk i_newwumpa;
extern unk WUMPACOUNT;
extern unk WInfo;
extern unk NewWumpa;
extern unk WScr;
extern unk sw_hack;
extern unk DRAWWUMPAS;
extern unk i_tempwumpa;
extern unk LIGHTMASK;
extern unk i_maskfeathers;
extern unk MaskFeathers;
extern unk i_nameinput;
extern unk input_alphabet;
extern unk menu_pulsate_ang;
extern unk menu_pulsate_rate;
extern unk NameInputTable;
extern unk NAMEENTRYSIZE;
extern unk INPUTSX;
extern unk TTINPUTPDY;
extern unk GAMEINPUTPDY;
extern unk TTINPUTPSY;
extern unk GAMEINPUTPSY;
extern unk ShowPlayerCoordinate;
extern unk TimingBarSet;
extern unk MenuTimer;
extern unk CYCLELANGUAGES;
extern unk menu_language;
extern unk menu_language_wait;
extern unk ForceRestart;
extern unk cheating;
extern unk memtest_done;
extern unk advice_wait;
extern unk NotEnoughSpace_NewGame;
extern unk wasloadgame;
extern unk LostLife;
extern unk force_menu;
extern unk game;
extern unk dme_symul;
extern unk dme_yadj;
extern unk CUTINFO;
extern unk POWERTEXTY;
extern unk PANELMENUX;
extern unk GAMENAMEY;
extern unk CHECKWAIT;
extern unk POINTWAIT;
extern unk CPLTIME;
extern unk CPLDELAY;
extern unk cp_fALONG;
extern unk nCheckLetters;
extern unk check_delay;
extern unk nPointLetters;
extern unk point_delay;
extern unk tt_flash;
extern unk temp_hours;
extern unk temp_minutes;
extern unk temp_hundredths;
extern unk temp_tenths;
extern unk temp_seconds;
extern unk PauseTimer;
extern unk pausestats_frame;
extern unk start_time;
extern unk timetrial_frame;
extern unk TT_SCALE;
extern unk TEXTZMUL;
extern unk TTScrPos;
extern unk tt_sx;
extern unk tt_sy;
extern unk GCLangConv;
extern unk max_game_percentage;
extern unk sapphire_relics;
extern unk platinum_relics;
extern unk gold_relics;
extern unk bonus_obj;
extern unk bonus_pPLAT;
extern unk bonus_crate_delay;
extern unk bonus_panel_wait;
extern unk death_begun;
extern unk death_obj;
extern unk death_lock;
extern unk death_pPLAT;
extern unk gempath_begun;
extern unk gempath_open;
extern unk gempath_obj;
extern unk gempath_lock;
extern unk gempath_pPLAT;
extern unk akuaku_advice_played;
extern unk lev_ambpos;
extern unk vLSZ;
extern unk loadsavepos;
extern unk bonus_crates_destroyed;
extern unk bonus_finished;
extern unk shadow_START;
extern unk shadow_FINISH;
extern unk finish_angle;
extern unk CutSceneText;
extern unk just_continued;
extern unk panel_head_yrot;
extern unk panel_head_xrot;
extern unk AshesMechInZ;
extern unk AshesMechInPos;
extern unk AshesMechOutZ;
extern unk AshesMechOutPos;
extern unk pObj;
extern unk FlyingLevelCompleteTimer;
extern unk ChrisBigBossDead;
extern unk SmokeyFinished;
extern unk SmokeyPosition;
extern unk PlrTub;
extern unk MAXLAPS;
extern unk RINGCOUNT;
extern unk carpet_place;
extern unk mg_wumpatot;
extern unk BONUSWUMPAOBJSX;
extern unk BONUSPANELSY;
extern unk WUMPAOBJSX;
extern unk PANELSY;
extern unk tDONE;
extern unk tCANCEL;
extern unk LANGUAGEOPTION;
extern unk stick_bits;
extern unk stick_bits_db;
extern unk gamesfx_volume;
extern unk saveload_status;
extern unk saveload_cardtype;
extern unk memcard_loadattempted;
extern unk saveload_cardchanged;
extern unk saveload_error;
extern unk SaveSlot;
extern unk memcard_loadresult_delay;
extern unk memcard_formatting;
extern unk memcard_formatme;
extern unk memcard_formatmessage_delay;
extern unk memcard_gamesavailable;
extern unk memcard_saveneeded;
extern unk memcard_savestarted;
extern unk memcard_deleteneeded;
extern unk memcard_deletestarted;
extern unk memcard_savemessage_delay;
extern unk memcard_saveresult_delay;
extern unk tNODATAAVAILABLE;
extern unk tNEWGAME;
extern unk VersionDisplayFlag;
extern unk tLOADGAME;
extern unk tPLAYCRASHBLAST;
extern unk tLANGUAGE;
extern unk LanguageName;
extern unk tMEMCARDRETRY;
extern unk tMEMCARDCONTINUE;
extern unk tFORMAT;
extern unk tMEMCARDMANAGE;
extern unk tRESUME;
extern unk tOPTIONS;
extern unk tQUIT;
extern unk tWARPROOM;
extern unk tRESTARTTRIAL;
extern unk tVIBRATION;
extern unk tON;
extern unk tOFF;
extern unk tSOUNDOPTIONS;
extern unk tSFXVOLUME;
extern unk tMUSICVOLUME;
extern unk tTCR_ABANDONTHISGAME;
extern unk tTCR_ABANDONTHISLEVEL;
extern unk tYES;
extern u8* superbuffer_base;
extern unk highallocaddr;
extern unk HubName;
extern unk LevelName;
extern unk tCONTINUE;
extern unk tGAMEOVER;
extern unk TT_INPUTY;
extern unk tRESTARTRACE;
extern unk tLOAD;
extern unk tSAVE;
extern unk tSAVEGAME;
extern unk tDELETEGAME;
extern unk tEXIT;
extern unk tJCANCEL2;
extern unk tCONFIRMLOAD;
extern unk tMEMCARDACCESS;
extern unk tCONFIRMSAVE;
extern unk tCONFIRMOVERWRITE;
extern unk tNO;
extern unk tCONFIRMDELETE;
extern unk tCONFIRMFORMAT;
extern unk lost_controller;
extern unk tFAILEDTODELETE;
extern unk tTCR_CONTENTPROTECTIONFAULT;
extern unk tFAILEDTOSAVE;
extern unk tPRESSxTOCONTINUE;
extern unk new_power;
extern unk PData;
extern unk tLOADCRASHBLAST;
extern unk tCONNECTGBA;
extern unk tCONNECTING;
extern unk tPLEASEWAIT;
extern unk tDOWNLOADING;
extern unk tGAMEINST;
extern unk tCANTDOWNLOAD;
extern unk tDELETE;
extern unk tCHECK;
extern unk tPOINT;
extern unk plr_crystal;
extern unk plr_crategem;
extern unk plr_bonusgem;
extern unk FlyingLevelExtro;
extern unk bonus_frame;
extern unk PANELWUMPAYROT;
extern unk PANELCRATEYROT;
extern unk PlaceName3;
extern unk BONUSLIVESOBJSX;
extern unk BONUSLIFESCALE;
extern unk COMPLEXPLAYERSHADOW;
extern unk wumpa_scene;
extern unk ttty;
extern unk ADeb;
extern unk mechbits;
extern unk atlasbits;
extern unk helibits;
extern unk jeepbits;
extern unk NODEBRIS;
extern unk SFXCOUNT_ALL;
extern unk GAMEOBJECTCOUNT;
extern unk temp_cuboid_side;
extern unk temp_cuboid_bounce_angle;
extern unk temp_yrot;
extern unk temp_xzmomset;
extern unk TerLayer;
extern unk plr_conveyor_mom;
extern unk plr_conveyor_yrot;
extern unk temp_roof_xrot;
extern unk temp_roof_zrot;
extern unk i_projectile;
extern unk Projectile;
extern unk jonwidth;
extern unk jonwidth2;
extern unk FIZZLEVOL;
extern unk crates_destroyed;
extern unk crate_wumpa;
extern unk EShadNorm;
extern unk ShadRoofNorm;
extern unk old_bonus_crates;
extern unk PYROTILTX;
extern unk AKUAKUTILTX;
extern unk CurrentDebugJeep;
extern unk WesternEnemyStarts;
extern unk WesternPlayerStart;
extern unk WesternRestartPoints;
extern unk BaseWheelPosition;
extern unk DropAdj;
extern unk ExhaustPos;
extern unk PlayerJeep;
extern unk JeepFrame;
extern unk JeepInControl;
extern unk IdealCamPos;
extern unk IdealObjPos;
extern unk FireBossHealth;
extern unk JeepBaseAng;
extern unk JeepRailCamTween2;
extern unk JeepCamTween;
extern unk JeepRailCamTween;
extern unk ResetJeepCamera;
extern unk Replay;
extern unk CamVec;
extern unk JeepFollowSpline;
extern unk JeepCamSnapShot;
extern unk JeepCamPosTween;
extern unk JeepCamPos2;
extern unk JeepIntroCamSpline;
extern unk JeepIntroLookSpline;
extern unk SmokeyCam;
extern unk JCDist;
extern unk HighCam;
extern unk FireBossPosition;
extern unk EnemyJeep;
extern unk BuggyDataMax;
extern unk BuggyData;
extern unk buggy_contact;
extern unk WesternTime;
extern unk JeepTrail;
extern unk TrailAir;
extern unk TrailPntr;
extern unk NewIntoTrail;
extern unk NewCurrentIntensity;
extern unk TrailActive;
extern unk FIREBOSSTHROWSPEED;
extern unk FIREBOSSCHASESPEED;
extern unk FIREBOSSSCAREDSPEED;
extern unk FIREBOSSENDRUNAWAY;
extern unk FIREBOSSSTART;
extern unk FIREBOSSHOLDPLAYERTIME;
extern unk FIREBOSSHOLDINTROTIME;
extern unk FIREBOSSENDCHASE;
extern unk FIREBOSSTURNTOMECH;
extern unk FIREBOSSTURNFROMMECH;
extern unk FIREBOSSWALLFIREDIST;
extern unk FIREBOSSSCALE;
extern unk WallOfFireOn;
extern unk FireBoss;
extern unk WallOfFirePosition;
extern unk WallOfFireAngleY;
extern unk ThrowVal;
extern unk ThrowList;
extern unk FOOTJUDDERTIME;
extern unk FOOTSTEPVOL;
extern unk InMechZ;
extern unk OutMechZ;
extern unk InMechPos;
extern unk OutMechPos;
extern unk EndChase;
extern unk TRANSLATEFIREBOSS;
extern unk FIREBOSSRUNAHEADTIMER;
extern unk FOOTRUMBLEPOWER;
extern unk FIREVOL;
extern unk BREAKVOL;
extern unk BOSSBANGVOL;
extern unk BOSSANGRYVOL;
extern unk BOSSBREATHVOL;
extern unk BOSSBREATHFRAME;
extern unk FireBossWaterSoundTimer;
extern unk WallOfFireAttatched;
extern unk WallOfFireHurtTimer;
extern unk RelTemp;
extern unk FireBossFinished;
extern unk FireBossWon;
extern unk WaterTimer;
extern unk SMASHRUMPOWER;
extern unk JeepBalloon;
extern unk FBSCREAMVOL;
extern unk FIREWATERSOUNDTIME;
extern unk WATERFIRESOUNDVOL;
extern unk WaterLength;
extern unk WaterWidth;
extern unk SEEKANGSPEED;
extern unk MAXWATERTIME;
extern unk GenericTrail;
extern unk FireBossCam;
extern unk RaceOn;
extern unk WID;
extern unk TrailPos;
extern unk WorldAxis;
extern unk sf;
extern unk sf2;
extern unk lcutdir;
extern unk lcutdircol;
extern unk lcutambcol;
extern unk titledir;
extern unk titlergb;
extern unk titlergb2;
extern unk creditsdir;
extern unk creditsdircol;
extern unk creditsrgb;
extern unk ZVec;
extern unk intensity;
extern unk creditsang;
extern unk Lights;
extern unk POINTCOUNT;
extern unk LIGHTCOUNT;
extern unk AMBIENTCOUNT;
extern unk DIRECTCOUNT;
extern unk ldir;
extern unk lcol;
extern unk acol;
extern unk DatPtr;
extern unk DatSize;
extern unk memcard_in;
extern unk memcard_formatted;
extern unk memcard_loadcompleted;
extern unk memcard_loadmessage_delay;
extern unk SLOTPANELSX;
extern unk SLOTPANELSZ;
extern unk SLOTPANELDX;
extern unk SLOTPANELDY;
extern unk tTCR_SAVEBANK;
extern unk numtl_white;
extern unk nurndr_forced_mtl;
extern unk tEMPTY;
extern unk CurrentCausticTexture;
extern unk memdump_enabled;
extern unk pad_record;
extern unk FixFrameRate;
extern unk pad_play;
extern unk ForcePlayRecord;
extern unk foot_u;
extern unk foot_v;
extern unk world_vd;
extern unk wumpa_scene2;
extern unk crate_scene2;
extern unk pause_scene2;
extern unk screendump;
extern u32 superbuffersize;
extern unk superbuffer_reset_base;
extern unk ShadowMatBodge;
extern unk PadRecordPath;
extern unk ShadowMat;
extern unk hLoadScreenThread;
extern unk IsLoadingScreen;
extern unk stick_oldbits;
extern unk enable_bumpmap;
extern unk demo_inactivity;
extern unk NoSoundPlease;
extern unk tbtxt;
extern unk i_tb_code;
extern unk i_tb_draw;
extern unk frameout_count;
extern unk frameout;
extern unk test_sfx;
extern unk PANELOFF;
extern unk GLASSPLAYER;
extern unk DRAWCREATUREHACK;
extern unk DRAWWORLDHACK;
extern unk BLUR;
extern unk HAZE;
extern unk HACK;
extern unk DRAWDEBRISHACK;
extern unk DRAWWUMPAHACK;
extern unk pause_rndr_on;
extern unk pause_rndr_mtl;
extern unk pause_src_mtl;
extern unk bgloadchr;
extern unk bgloadanim;
extern unk bgload_objpos;
extern unk bgload_objstart;
extern unk bgload_objtarg;
extern unk bgload_bumppos;
extern unk bgload_objspd;
extern unk bobrate;
extern unk bobscale;
extern unk fallrate;
extern unk maxfallspd;
extern unk bgload_model;
extern unk bgloadlastcharacter;
extern unk bgloadcharnames;
extern unk mg_accel;
extern unk mg_friction;
extern unk mg_spd_rng;
extern unk mg_player_rng;
extern unk mg_gopos;
extern unk mg_player_y_offset;
extern unk mg_player_spin;
extern unk mg_player_spin_rate;
extern unk mg_player_tilt;
extern unk mg_player_tilt_scale;
extern unk mg_wumpa_issue_delay;
extern unk mg_wumpa_issue_extra_delay;
extern unk mg_wumpa_rand_rng;
extern unk mg_wumpa_rng;
extern unk mg_wumpa_spd;
extern unk mg_wumpacore_spd;
extern unk mg_wumpagibber;
extern unk mg_scoregibber;
extern unk mg_scoremaxgibber;
extern unk mg_scoregibbercntx;
extern unk mg_scoregibberratex;
extern unk mg_scoregibbercnty;
extern unk mg_scoregibberratey;
extern unk mg_colldist;
extern unk bgload_campos;
extern unk camtiltrate;
extern unk camrotrate;
extern unk camtiltscale;
extern unk camrotscale;
extern unk bump_scale;
extern unk bgloadgibberscale;
extern unk bgloadgibberscalecnt;
extern unk bgloadgibberscalecntrate;
extern unk bgloadgibbercntx;
extern unk bgloadgibberratex;
extern unk bgloadgibbercnty;
extern unk bgloadgibberratey;
extern unk bgloadpos;
extern unk hCopyFilesThread;
extern unk iss3cmp;
extern unk loading;
extern unk PadData;
extern unk AtmosphericPressureHackedZ;
extern unk save_paused;
extern unk snowflake_scale;
extern unk bgload_complete;
extern unk superbuffer_free;
extern unk DoMeChris;
extern unk bgload_animtime;
extern unk mg_rand;
extern unk mg_spd;
extern unk mg_yspd;
extern unk mg_player_pos;
extern unk mg_wumpa_shapes;
extern unk mg_wumpa_init;
extern unk mg_player_actpos;
extern unk mg_wumpaobj;
extern unk mg_wumpamtx;
extern unk mg_wumpa_ix;
extern unk mg_wumpa_issue_wait;
extern unk WeatherBossSkeletonTimer;
extern unk WeatherBossDead;
extern unk SfxTabGLOBAL;
extern unk DebMat;
extern unk PadRecInfo;
extern unk nuvideo_global_vbcnt;
extern unk MAXVPSIZEX;
extern unk MAXVPSIZEY;
extern unk MINVPSIZEX;
extern unk MINVPSIZEY;
extern unk game_music;
extern unk musicvol_mul;
extern unk OppTubCreature;
extern unk force_glass_screencopy_enable;
extern unk PlrEvent;
extern unk plr_tocam_wait;
extern unk plr_tocam_turn;
extern unk plr_tumblehack;
extern unk SWEEPATTACKSTARTTIME;
extern unk SWEEPATTACKENDTIME;
extern unk SCOOTERJUMPPAUSEFRAME;
extern unk SNOWBOARDJUMPPAUSEFRAME;
extern unk OFFROADERSPEEDTIME;
extern unk jeepsfx;
extern unk i_jkeepsfx;
extern unk jeeptyrepos;
extern unk MECHRUNNINGJUMPPAUSEFRAME;
extern unk MECHSTANDINGJUMPPAUSEFRAME;
extern unk mech_land_hack;
extern unk FIREENGINERUNNINGJUMPPAUSEFRAME;
extern unk FIREENGINESTANDINGJUMPPAUSEFRAME;
extern unk CARPETTIME;
extern unk carpet_character;
extern unk carpet_model;
extern unk carpet_action;
extern unk carpet_overlap;
extern unk gyropos;
extern unk carpet_pos;
extern unk carpet_oldpos;
extern unk carpet_RPos;
extern unk carpet_yrot;
extern unk carpet_xrot;
extern unk carpet_anim;
extern unk carpet_lights;
extern unk carpet_time;
extern unk carpet_panelpos;
extern unk CARPETLOOPTIME;
extern unk carpet_splpos;
extern unk carpet_mom;
extern unk FASTMINECARTMUL;
extern unk SLOWMINECARTMUL;
extern unk cart_sfx;
extern unk TubLinkCR;
extern unk TubLinkGT;
extern unk CircuitOriginGT;
extern unk OppTub;
extern unk opptub_action;
extern unk opptub_wait;
extern unk TUBWAIT;
extern unk TUBBOOSTFRAMES;
extern unk race_finished;
extern unk TubLink;
extern unk plr_tub_tilt;
extern unk plr_tub_tilttarget;
extern unk plr_tub_tiltlock;
extern unk tub_overlap;
extern unk TempTubPos;
extern unk plr_gates;
extern unk GATECOUNT;
extern unk gate_bits;
extern unk arrow_xrot;
extern unk arrow_yrot;
extern unk ring_yrot;
extern unk ring_xrot;
extern unk ring_pos;
extern unk RINGPULL;
extern unk FlyingLevelVictoryDance;
extern unk PANELCRUNCHXROT;
extern unk PANELCRUNCHX;
extern unk PANELCRUNCHY;
extern unk PANELCRUNCHZ;
extern unk PANELCRUNCHSCALE;
extern unk PANELSINKX;
extern unk PANELSINKY;
extern unk PANELSINKZ;
extern unk PANELSINKSCALE;
extern unk PANELBLIMPX;
extern unk PANELBLIMPY;
extern unk PANELBLIMPZ;
extern unk PANELBLIMPSCALE;
extern unk PANELCANVASX;
extern unk PANELCANVASY;
extern unk PANELCANVASZ;
extern unk PANELCANVASSCALE;
extern unk WUMPATXTSX;
extern unk CRATEOBJSX;
extern unk CRATETXTSX;
extern unk LIVESOBJSX;
extern unk LIVESTXTSX;
extern unk BONUSWUMPATXTSX;
extern unk BONUSCRATEOBJSX;
extern unk BONUSCRATETXTSX;
extern unk BONUSLIVESTXTSX;
extern unk NEWLIFEOBJSX;
extern unk NEWBONUSLIFEOBJSX;
extern unk LIFESCALE;
extern unk CHECKPOINT3DSCALE;
extern unk CHECKPOINT3DSEPERATION;
extern unk CHECKPOINT3DHEIGHT;
extern unk PAUSEPANELZ;
extern unk PAUSEPANELX;
extern unk PAUSETEXTZ;
extern unk PAUSENAMEY;
extern unk PAUSEINFOY;
extern unk PAUSEPERCENTY;
extern unk PAUSEHMUL;
extern unk PAUSEVMUL;
extern unk TT_MESSAGEY;
extern unk TT_TIMESDY;
extern unk RUMBOSSBARX;
extern unk RUMBOSSBARY;
extern unk RUMBOSSBARZ;
extern unk RUMBOSSBARSCALEX;
extern unk RUMBOSSBARSCALEY;
extern unk ATMBOSSBARX;
extern unk ATMBOSSBARY;
extern unk ATMBOSSBARZ;
extern unk ATMBOSSBARSCALEX;
extern unk ATMBOSSBARSCALEY;
extern unk FIREBOSSBARX;
extern unk FIREBOSSBARY;
extern unk FIREBOSSBARZ;
extern unk FIREBOSSBARSCALEX;
extern unk FIREBOSSBARSCALEY;
extern unk PANELRINGX;
extern unk PANELRINGY;
extern unk PANELRINGSIZE;
extern unk PDebInfo;
extern unk i_pdeb;
extern unk PDeb;
extern unk tRELICSREQUIRED;
extern unk tTCR_PRESSSTARTTORESUME;
extern unk tCRYSTALS;
extern unk tPOWERS;
extern unk tGEMS;
extern unk tRELICS;
extern unk tTIMES;
extern unk tBONUS;
extern unk tDEMO;
extern unk tBESTTIME;
extern unk t2NDBESTTIME;
extern unk t3RDBESTTIME;
extern unk tNONEWTIME;
extern unk tENTERINGTIMETRIAL;
extern unk tOK;
extern unk PlaceName;
extern unk sfxcount_global;
extern unk sfxcount_local;
extern unk SfxTabFRONTEND;
extern unk SfxInfo;
extern unk CurSfxTabLocal;
extern unk sfxpath;
extern unk gamesfx_edbits;
extern unk testglobalsfx;
extern unk last_testglobalsfx;
extern unk testsfx;
extern unk nusound_fade_end;
extern unk tHIRAGANA;
extern unk tKATAKANA;
extern unk tABC;
extern unk tTIMETRIAL;
extern unk tENTERNAME;
extern unk tGO;
extern unk tSOUND;
extern unk tLEVEL;
extern unk tSUPERBELLYFLOP;
extern unk tSUPERBELLYFLOPTEXT;
extern unk tDEATHTORNADOSPIN;
extern unk tDEATHTORNADOSPINTEXT;
extern unk tDOUBLEJUMP;
extern unk tDOUBLEJUMPTEXT;
extern unk tFRUITBAZOOKA;
extern unk tFRUITBAZOOKATEXT;
extern unk tSPEEDSHOES;
extern unk tSPEEDSHOESTEXT;
extern unk tSNEAKSHOES;
extern unk tSNEAKSHOESTEXT;
extern unk tPRESSSTARTBUTTON;
extern unk tPLEASEINSERTMEMORYCARDSLOT1;
extern unk tCONFIRMCREATESAVEGAME;
extern unk tSAVING;
extern unk tGAMELOADED;
extern unk tGAMESAVED;
extern unk tGAMEDELETED;
extern unk tNOCARD;
extern unk tCORRUPTED;
extern unk tOTHERMARKET;
extern unk tDAMAGED;
extern unk tWRONGDEV;
extern unk tINSUFFICIENTSPACE;
extern unk tNOTCOMPAT;
extern unk tCORRUPTDATA;
extern unk tFSERR1;
extern unk tFSERR2;
extern unk tFSERR3;
extern unk tFSERR4;
extern unk WBIntroTweenTime;
extern unk GUNBOATVOLUME;
extern unk BATTLESHIPAVOLUME;
extern unk BATTLESHIPBVOLUME;
extern unk ExhaustPosA;
extern unk ExhaustPosB;
extern unk SeekGliderCamTime;
extern unk SeekTiltZOveride;
extern unk SeekTiltZZero;
extern unk SeekTiltZNonZero;
extern unk RumbleCamVal;
extern unk BumpSpeed;
extern unk BumpAmount;
extern unk CRASHTEROIDSENGINEVOL;
extern unk CRASHTEROIDSAMBIENTVOL;
extern unk CRASHTEROIDSZOFFAVOL;
extern unk CRASHTEROIDSSATELLITEVOL;
extern unk DebugCreature;
extern unk jonemit;
extern unk FIXVELFADETIME;
extern unk FIXVELTIME;
extern unk FIXVELBUMPAMOUNT;
extern unk WBBULLETSPEED;
extern unk WBBULLETFIRERATE;
extern unk PlayerGlider;
extern unk WBIntroOn;
extern unk FireFlyIntroTween;
extern unk TornFireY;
extern unk SpaceFirePosA;
extern unk SpaceFirePosB;
extern unk TORPTARGBLEEPTIME;
extern unk TORPTARGFAILBLEEPTIME;
extern unk TORPTARGAQUIREBLEEPTIME;
extern unk BEENHITBUZZTIME;
extern unk BEENHITBIGBUZZTIME;
extern unk BEENHITBIGRUMTIME;
extern unk YAdj;
extern unk XAdj;
extern unk TorpedoTime;
extern unk TARGETBLEEPTIME;
extern unk TORPRUMBLEVAL;
extern unk TORPBUZZVAL;
extern unk GliderTargetPos;
extern unk WeatherBossFirePoint;
extern unk Level_GliderSpeed;
extern unk Level_TargetTime;
extern unk CRASHTEROIDSSeekTiltXTimeZero;
extern unk CRASHTEROIDSSeekTiltXTimeNonZero;
extern unk TORNSeekTiltXTimeZero;
extern unk TORNSeekTiltXTimeNonZero;
extern unk WBSeekTiltZTimeZero;
extern unk WBSeekTiltZTimeNonZero;
extern unk WBSeekTiltXTimeZero;
extern unk WBSeekTiltXTimeNonZero;
extern unk WeatherBossTargetAppearTime;
extern unk WBTARGSPEED;
extern unk WBTARGSEEKSPEEDZERO;
extern unk WBTARGSEEKSPEEDNONZERO;
extern unk WBTARGLIMX;
extern unk WBTARGLIMY;
extern unk WBTARGSCALE;
extern unk WeatherBossTargetPos;
extern unk WeatherBossTargetVel;
extern unk WeatherBossTargetAppearTimer;
extern unk WeatherBossCamMtx;
extern unk WBLIMX;
extern unk WBMINY;
extern unk WBMAXY;
extern unk WBTILTXSCALE;
extern unk WBTILTZSCALE;
extern unk WBCamDist;
extern unk FIXX;
extern unk FIXY;
extern unk WBTARGHOMESPEED;
extern unk WBIntroDestTiltX;
extern unk WBIntroDestTiltZ;
extern unk WBITILTXSCALE;
extern unk WBITILTZSCALE;
extern unk Level_GliderCentreZ;
extern unk Level_GliderCentreX;
extern unk Level_GliderRadius;
extern unk Level_GliderFloor;
extern unk Level_GliderCurrentCeiling;
extern unk Level_GliderCeiling;
extern unk BEENHITTORNRUMTIME;
extern unk BEENHITTORNBUZZTIME;
extern unk WBClimbRate;
extern unk WBFRICX;
extern unk WBFRICY;
extern unk VehicleLevelImmune;
extern unk Level_DeadTime;
extern unk WBBARRELSEEKSPEEDZERO;
extern unk WBBARRELSEEKSPEEDNONZERO;
extern unk WBBARRELSPEED;
extern unk WBIntroGliderPos;
extern unk GLIDERHITSOUNDFREQUENCY;
extern unk GLIDERHITSOUNDOTHERID;
extern unk SINKENGINEVOL;
extern unk MOSENGPITCH;
extern unk MOSENGPITCHSLOPE;
extern unk OIDENGPITCH;
extern unk OIDENGPITCHSLOPE;
extern unk OIDZOFPITCH;
extern unk OIDZOFPITCHSLOPE;
extern unk OIDENGRUMBLE;
extern unk OIDENGRUMBLESLOPE;
extern unk GLIDENGRUMBLE;
extern unk GLIDENGRUMBLESLOPE;
extern unk MOSENGRUMBLE;
extern unk MOSENGRUMBLESLOPE;
extern unk GLIDENGPITCH;
extern unk GLIDENGPITCHSLOPE;
extern unk GLIDENGINEVOL;
extern unk GLIDRUMTIM;
extern unk GLIDRUMVOL;
extern unk GliderRumble;
extern unk EnemyZoffa;
extern unk FarmTestIndx;
extern unk FarmFrame;
extern unk TeleportPos;
extern unk TeleportVel;
extern unk NumZoffasFiring;
extern unk LastNumZoffasFiring;
extern unk ZoffaFirePosA;
extern unk ZoffaFirePosB;
extern unk ZoffaAlter;
extern unk UFOEXPLODEID;
extern unk HovaRad;
extern unk HovaY;
extern unk SatelliteRad;
extern unk SatelliteY;
extern unk PropRad;
extern unk PropY;
extern unk PropYOff;
extern unk BigRad;
extern unk HovaBlimp;
extern unk TornadoList;
extern unk jonfirst;
extern unk jontorn;
extern unk ACTIVEBLIMPCOUNT;
extern unk jtemp1;
extern unk SatelliteCharacterId;
extern unk SatelliteList;
extern unk SPACETRAN;
extern unk SpaceStationList;
extern unk SPACETORNADOSCALE;
extern unk SPACEMINSPEEDIN;
extern unk HITSHIELDVOL;
extern unk HITSHIELDVOLA;
extern unk SPACESTATIONEXPLODEVOL;
extern unk SHIELDSCALEY;
extern unk GliderBulletReflectMtx;
extern unk FreeGliderBulletList;
extern unk GliderBullet;
extern unk FreeEnemyGliderBulletList;
extern unk EnemyGliderBullet;
extern unk FreeEnemyGliderBulletNum;
extern unk FreeGliderBulletNum;
extern unk UsedEnemyGliderBulletNum;
extern unk UsedGliderBulletNum;
extern unk UsedEnemyGliderBulletList;
extern unk UsedGliderBulletList;
extern unk BulletEnemyNumFrees;
extern unk BulletNumFrees;
extern unk GliderBulletReflectPos;
extern unk GliderBombs;
extern unk PlayerPlane;
extern unk ZepplinGliderOffset;
extern unk FarmCameraStart;
extern unk FarmZepplinStart;
extern unk FarmZepplinSpeed;
extern unk FarmZepplinTimer;
extern unk CameraSeekSpeedAutoPilot;
extern unk GliderCamHighTimer;
extern unk WeatherCamCentY;
extern unk WeatherCamScaleX;
extern unk WeatherCamScaleY;
extern unk WeatherCamDistY;
extern unk WeatherCamDistZ;
extern unk WeatherCamIntDistZ;
extern unk WBCamY;
extern unk WBCamZ;
extern unk WBCamI;
extern unk WBXTiltScale;
extern unk WBYTiltScale;
extern unk WBZTiltScale;
extern unk WBTween;
extern unk WBTX;
extern unk WBTZ;
extern unk WBIntroTweenTimer;
extern unk WeatherBossCamSpline;
extern unk ExtroIdealPos;
extern unk ExtroTargAng;
extern unk TORNADOINTERESTY;
extern unk TORNADOCAMIDEAL;
extern unk FFTWEENTIME;
extern unk ExtroChangeVal;
extern unk ExtroStillToEndTime;
extern unk ExtroSeekZeroTime;
extern unk GliderIntroInterest;
extern unk GliderIntroCamPos;
extern unk FireFlyIntroOn;
extern unk ExtroAngOff;
extern unk ExtroStillCamPos;
extern unk ExtroStillVelocity;
extern unk ExtroStillInterest;
extern unk GliderInvMtx;
extern unk AsteroidList;
extern unk ActiveAsteroidListNum;
extern unk ActiveAsteroidList;
extern unk AsteroidDebug;
extern unk GliderCollPoints;
extern unk EnemyGliderBombs;
extern unk SINKTORPVOL;
extern unk SINKTORPPITCH;
extern unk GliderBombCollisionPos;
extern unk GunBoatList;
extern unk BigGunIndx;
extern unk BigGunList;
extern unk BattleShipList;
extern unk BSTab;
extern unk WeatherBoss;
extern unk BazookaIconOn;
extern unk CamOveride;
extern unk WBSCALE;
extern unk LocIndx;
extern unk jonrotx;
extern unk jonroty;
extern unk WBICONSCALE;
extern unk BazookaTokenPos;
extern unk BazookaTokenCurrentPos;
extern unk IconMainDraw;
extern unk BossCollScale;
extern unk WBSMALLMAG;
extern unk WBMOVESPEED;
extern unk BossYAdj;
extern unk WBMASKONHIGH;
extern unk WBAKUMASKONHIGH;
extern unk WBMASKLEFT;
extern unk WBMASKLEFTRAD;
extern unk WBMASKRIGHT;
extern unk WBMASKRIGHTRAD;
extern unk WBMASKEYES;
extern unk WBMASKEYESRAD;
extern unk WBMASKCHEST;
extern unk WBMASKCHESTRAD;
extern unk WBSKELTIME;
extern unk WBSKELTIMERAND;
extern unk EYEBOLTFIRESPEED;
extern unk EYEBOLTFIRESCALEX;
extern unk EYEBOLTFIRESCALEY;
extern unk EYEBOLTFIREY;
extern unk WBANGSCALE;
extern unk WBANGOFF;
extern unk WBANGSCALE2;
extern unk WBANGOFF2;
extern unk WBANGSCALE3;
extern unk WBSNOWBALLSPEED;
extern unk WBSNOWCONESPEED;
extern unk WBLeftFirePos;
extern unk WBLeftStartFrame;
extern unk WBLeftStopFrame;
extern unk WBLeftStopTurnFrame;
extern unk WBDISTANCEYSPEED;
extern unk WBDISTANCEYTIME;
extern unk WBDISTANCESPEED;
extern unk WBDISTANCETIME;
extern unk WBLOLOSCALE;
extern unk WBLOLOTILTX;
extern unk WBAKUAKUSCALE;
extern unk BALLATTACKVOL;
extern unk BEAMVOL;
extern unk EYEATTACKVOL;
extern unk CHESTATTACKAVOL;
extern unk CHESTATTACKBVOL;
extern unk CHESTATTACKSOUNDTIME;
extern unk EYESTOPTIME;
extern unk ElectricalPosition;
extern unk WeatherBossSkeletonGlitchTimer;
extern unk VulnerableA;
extern unk VulnerableB;
extern unk VulnerableRad;
extern unk VulnerableSection;
extern unk FireVal;
extern unk TargetTemp;
extern unk TargetScale;
extern unk BIGSCALE;
extern unk SMALLSCALE;
extern unk GliderFrameCounter;
extern unk FireFlyStart;
extern unk FireFlyStartAngle;
extern unk FIREFLYVICDANCETIME;
extern unk FireFlyIntroAction;
extern unk FlyingLevelVictoryDanceTimer;
extern unk FireFlyIntroOldAction;
extern unk MatchMaxDist;
extern unk MatchMinDist;
extern unk MatchTimer;
extern unk PrePanTime;
extern unk PanSeekSpeed;
extern unk MinPanSeekSpeed;
extern unk FFINTROHEIGHT;
extern unk FFINTROCAMYOFF;
extern unk WRStartPos;
extern unk WRStartAng;
extern unk CrashteroidsStart;
extern unk CrashteroidsStartAngle;
extern unk LighteningHailVel;
extern unk LighteningFallXMin;
extern unk LighteningFallXMax;
extern unk HailFallSpeed;
extern unk HAILFLYUPSPEED;
extern unk HAILTIMERANGE;
extern unk HAILHIDDENTIME;
extern unk HAILCOLLRAD;
extern unk SkipNum;
extern unk SkipLeftA;
extern unk SkipLeftB;
extern unk SkipLeftC;
extern unk HailList;
extern unk BoltMtxC;
extern unk MyAttNum;
extern unk BOLTHOMESEEKTIME;
extern unk BOLTHOMESEEKSPEED;
extern unk BoltList;
extern unk BoltMtxA;
extern unk BoltMtxB;
extern unk WBTYPE2SCALETIME;
extern unk WBBOSSINTRODIST;
extern unk WeatherBossIntroSpline;
extern unk AMBIENTVOL;
extern unk WBScrollSpeed;
extern unk WBINTROLOOKAHEAD;
extern unk EarthBoss;
extern unk PlayerAtlas;
extern unk AtlasEmbeddedFrame;
extern unk BALLBUZZSLOPE;
extern unk BALLBUZZMIN;
extern unk BALLBUZZLIMCOS;
extern unk BALLHITVOLDIV;
extern unk BALLHITVOLBASE;
extern unk AtlasWhackValue;
extern unk AtlasWhackTimer;
extern unk ATLASBOOSTVOL;
extern unk BALLRUMBLESLOPE;
extern unk ATLASBOOSTSPEED;
extern unk ATLASLOOPVOL;
extern unk AtlasFrame;
extern unk RumbleCamTweenDest;
extern unk RumbleCamTween;
extern unk DavesGay;
extern unk kj;
extern unk ShootRockSound;
extern unk ebgo;
extern unk ebpos;
extern unk ebtime;
extern unk JonnyOn;
extern unk FORMPITCH;
extern unk ROKDEATHTIME;
extern unk FORMSOUNDTIME;
extern unk RUMZOOM;
extern unk ROKBPITCH;
extern unk RumbleCamTweenInterest;
extern unk BOSSLANDVOL;
extern unk BIGLANDVOL;
extern unk EarthBossDeathEffect;
extern unk EarthBossDeathTimer;
extern unk RumbleCamPos;
extern unk JeepRock;
extern unk EarthBossJustEntered;
extern unk EarthBossAimLocation;
extern unk EarthBossAimVelocity;
extern unk RumbleDisplayMode;
extern unk RumbleCamTweenInterestDest;
extern unk NumRockPanel;
extern unk RockPanelScale;
extern unk RockPanel;
extern unk RockPanelOff;
extern unk DISPLAYYSPEED;
extern unk RockPanelEdge;
extern unk RockPanelSpacing;
extern unk RockPanelSlideSpeed;
extern unk RockPanelRotIncX;
extern unk RockPanelRotIncY;
extern unk RockPanelRotIncZ;
extern unk RockPanelRotX;
extern unk RockPanelRotY;
extern unk RockPanelRotZ;
extern unk RockPanelDest;
extern unk RockPanelObj;
extern unk RockPanelData;
extern unk RumbleDisplayY;
extern unk RadarX;
extern unk RadarY;
extern unk RadarZ;
extern unk RADARSCALE;
extern unk RADARSCALEX;
extern unk MAXRAD;
extern unk RADARBASESCALE;
extern unk DOTSCALE;
extern unk EarthBossVortexOpen;
extern unk ROKAMBVOL;
extern unk r1;
extern unk HitMag;
extern unk AtlasHitsLost;
extern unk ROKPITCH;
extern unk MINROKVOL;
extern unk BIGIMPACT;
extern unk trail;
extern unk trailair;
extern unk trailpt;
extern unk IntoTrail;
extern unk CurrentIntensity;
extern unk TRAILFUDGE;
extern unk AtlasTrailType;
extern unk ROCKSCALE;
extern unk RumbleStoreTotalRoks;
extern unk RumbleStoreCrunchRoks;
extern unk RumbleStoreCrashRoks;
extern unk ROCKSMASHVOL;
extern unk RumbleCamY;
extern unk VehicleMask;
extern unk DebugCam;
extern unk WhackSFX;
extern unk RumbleBumpVal;
extern unk WeatherBossMovePoint;
extern unk TestIndx;
extern unk BigGunDraw;
extern unk TestLocatorIndx;
extern unk BossHitLoc;
extern unk AmbientPosition;
extern unk AtlasEmbedd;
extern unk AtlasLastNonEmbeddedFrame;
extern unk DebugTemp;
extern unk TempAngX;
extern unk TempAngY;
extern unk trailpos;
extern unk NullNuVec;
extern unk WheelId;
extern unk xpnt;
extern unk hide;
extern unk effecttypes;
extern unk debtab;
extern unk effect_types_used;
extern unk CutoffCameraVec;
extern unk curdeba;
extern unk curdebb;
extern unk debris_render_group;
extern unk globaltime;
extern unk freechunkcontrolsptr;
extern unk freechunkcontrols;
extern unk debris_chunk_control_stack_index;
extern unk debris_chunk_control_stack;
extern unk gensorttab;
extern unk gencodetab;
extern unk debbuffer;
extern unk mydebbuffersize;
extern unk freedebchunks;
extern unk freedebkeys;
extern unk freeDmaDebType;
extern unk freedebchkptr;
extern unk freedebkeyptr;
extern unk debris_emitter_stack;
extern unk debris_emitter_stack_index;
extern unk debris_chunk_controls;
extern unk DmaDebTypes;
extern unk ParticleChunkRenderStack;
extern unk globalframes;
extern unk debris_sfx;
extern unk testeffect;
extern unk scaneffect;
extern unk object_switches;
extern unk AnimParams;
extern unk GrassClumps;
extern unk ObjectInstance;
extern unk ObjectPath;
extern unk ObjectAnim;
extern unk ObjectInstAnim;
extern unk NuCutSceneCharacterRender;
extern unk NuCutSceneCharacterRelease;
extern unk NuCutSceneFindCharacters;
extern unk NuCutSceneCharacterCreateData;
extern unk NuCutSceneRigidCollisionCheck;
extern unk locatorfns;
extern unk balls;
extern unk DoNotSiwzzle;
extern unk NuBridge_base_scene;
extern unk BridgeFree;
extern unk Bridges;
extern unk NuBridgeProc;
extern unk ropeu1;
extern unk ropev1;
extern unk ropeu2;
extern unk ropev2;
extern unk ropemat;
extern unk NuWindQS;
extern unk NuWindMtxIndex;
extern unk NuWindDir;
extern unk NuWindDir2;
extern unk NuWindWave;
extern unk NuWindGCount;
extern unk NuWindGroup;
extern unk NuWindMtxs;
extern unk TerrPlatDis;
extern unk crashdata;
extern unk curSphereter;
extern unk TerrShapeAdjCnt;
extern unk curPickInst;
extern unk terraincnt;
extern unk platinrange;
extern unk ShadPoly;
extern unk TerrPoly;
extern unk PlatImpactId;
extern unk situtotal;
extern unk terlistptr;
extern unk CurTerr;
extern unk TerI;
extern unk ScaleTerrain;
extern unk castnum;
extern unk ecastnum;
extern unk eshadroofhit;
extern unk EShadRoofY;
extern unk EShadRoofNorm;
extern unk EShadRoofPoly;
extern unk ecastroofnum;
extern unk eshadhit;
extern unk EShadPoly;
extern unk shadroofhit;
extern unk ShadRoofPoly;
extern unk castroofnum;
extern unk shadhit;
extern unk WallSplCount;
extern unk WallSplList;
extern unk PlatCrush;
extern unk SphereData;
extern unk plathitid;
extern unk ScaleTerrainT1;
extern unk TerrPolyInfo;
extern unk TerrPolyObj;
extern unk terrhitflags;
extern unk CurTrackInfo;
extern unk ScaleTerrainT2;
extern unk tertempmat;
extern unk tertempvec4;
extern unk PlatImpactNorm;
extern unk PlatImpactTer;
extern unk TerrShape;
extern unk testlock;
extern unk TempScanStack;
extern unk TempStackPtr;
extern unk PickupTerr;
extern unk stritot;
extern unk totaldupes;
extern unk totalpts;
extern unk tritot;
extern unk skinbuffer_free;
extern unk glass_col;
extern unk glass_col_mix_speed;
extern unk glass_mix_speed;
extern unk glass_strength;
extern unk GLASSPLAYERFADE;
extern unk glass_mtl;
extern unk glass_mtl_blendskin;
extern unk glass_mtl_blendskin2;
extern unk ANGELGLASSMIX;
extern unk MAXGLASSMIX;
extern unk depthTexture;
extern unk depthMtl;
extern unk haze_mtl;
extern unk haze_surf;
extern unk NuLightHazePolymtl;
extern unk NuLightHazePolyus;
extern unk NuLightHazePolyvs;
extern unk haze_tex;
extern unk CV_WOBBLETABLE_START;
extern unk HazeValue;
extern unk currentlight1;
extern unk currentlight2;
extern unk currentlight3;
extern unk NuLgtSeed;
extern unk buglight_distance;
extern unk NuLightAddMat;
extern unk NuLgtArcLaserCnt;
extern unk NuLgtArcLaserData;
extern unk NuLgtArcLaserFrame;
extern unk NuLgtArcV0;
extern unk NuLgtArcV1;
extern unk NuLgtArcLaserOldCnt;
extern unk NuLgtArcMtl;
extern unk NuLgtArcU0;
extern unk NuLgtArcU1;
extern unk stencil_mode;
extern unk backbuffer_grabbed_this_frame;
extern unk IsStencil;
extern unk IsObjLit;
extern unk rndrmtx_cnt_max;
extern unk geomitem_cnt_max;
extern unk fog_enabled;
extern unk NuRndrWaterRipDat;
extern unk NuRndrShadowCnt;
extern unk padflag;
extern unk mtx_arrayHGobj;
extern unk mtx_array2HGobj;
extern unk janim_arrayHGobjEval2;
extern unk scale_arrayHGobjEval2;
extern unk VtxBuffer;
extern unk mtx_array2HGobjRndrDwa;
extern unk NuRndrFootFree;
extern unk NuRndrFootData;
extern unk NuRndrShadMaskCount;
extern unk NuRndrWaterRipCnt;
extern unk NuRndrShadPolDat;
extern unk blkcnt;
extern unk backbuffer_tid;
extern unk tinfo;
extern unk tex;
extern unk ntal_first;
extern unk ntal_free;
extern unk ntalsysbuff;
extern unk nta_labels;
extern unk dynamicWaterScale;
extern unk dynamicWaterBlend;
extern unk watervisible;
extern unk DropletTex;
extern unk pDropletTex;
extern unk DropletTID;
extern unk dynamicWaterMaterial;
extern unk water_copy_mtl;
extern unk waterUVOffset;
extern unk fpointers;
extern unk filebuffer;
extern unk badGameDisc;
extern unk currentpointer;
extern unk bytesleft;
extern unk thisbytesread;
extern unk loadscreen;
extern unk cc;
extern unk loadscreenfade;
extern unk loadscreenfadedir;
extern unk datacounter;
extern unk totalbytesread;
extern unk bpointer;
extern unk datafull;
extern unk filelength;
extern unk malloced;
extern unk nusound_fade_start;
extern unk NuSndLoopInfo;
extern unk GLOBALOFFSET;
extern unk SChan;
extern unk dummypos;
extern unk tempvec;
extern unk tempvec4;
extern unk CausticTextures;
extern unk PS2_VCNTR_X;
extern unk PS2_VCNTR_Y;
extern unk saveload_freespace;
extern unk tb_peak_reset;
extern unk PS2_SCRATCH_BASE;
extern unk vpdmatag_curr;
extern unk VBSize;
extern unk BasisVBSize;
extern unk IBSize;
extern unk ActualVBSize;
extern unk ActualBasisVBSize;
extern unk ActualIBSize;
extern unk TexSize;
extern unk padmap;
extern unk launchedfromtitle;
extern unk PadDemoEnd;
extern unk maxblend_cnt;
extern unk maxblend_cntcnt;
extern unk Xloadscreen;
extern unk timerfreq;
extern unk timer_start;
extern unk frame_counter;
extern unk debmtx;
extern unk gravdiv;
extern unk psize;
extern unk ssize;
extern unk globalix1;
extern unk globalix2;
extern unk shadowmaterial;
extern unk GlobalTimerFreq;
extern unk seekoffset;
extern unk currentfd;
extern unk fileoffset;
extern unk FSStart;
extern unk MAHFile;
extern unk namesave;
extern unk temp;
extern unk Lockupbuffer1;
extern unk Lockupbuffer2;
extern unk Lockupbuffer3;
extern unk PrintError;
extern unk nchecks;
extern unk ffs;
extern unk do_copy;
extern unk totalramavailable;
extern unk totalprogramsize;
extern unk DemoFrameBuffer1;
extern unk SyFontBitmap;
extern unk DemoStatEnable;
extern unk drawcounter;
extern unk avfps;
extern unk DebugText;
extern unk curramover;
extern unk maxramover;
extern unk bl;
extern unk XFLightDir;
extern unk lightnegx;
extern unk lightnegy;
extern unk lightnegz;
extern unk XFLightPos;
extern unk DefaultLightGSLight;
extern unk PointLightGSLight;
extern unk lighttext;
extern unk myLightObj;
extern unk ShadowBodge;
extern unk primcount;
extern unk clipcount;
extern unk shadcolour;
extern unk ShadowColour;
extern unk whitecolour;
extern unk QBlockverts;
extern unk QBlockprims;
extern unk isquad;
extern unk QuadListColour;
extern unk Motor;
extern unk curstream;
extern unk RemapPtr;
extern unk VolConvert;
extern unk REMAP_GLOBAL;
extern unk xfer_buffer;
extern unk REMAP_ESKIMOROLL;
extern unk REMAP_CRASHANDBURN;
extern unk REMAP_H2OHNO;
extern unk REMAP_SMOKEYANDTHEBANDICOOT;
extern unk REMAP_COMPACTORREACTOR;
extern unk REMAP_AVALANCHE;
extern unk REMAP_CORALCANYON;
extern unk REMAP_ARCTICANTICS;
extern unk REMAP_JUNGLERUMBLE;
extern unk REMAP_FORCEOFNATURE;
extern unk REMAP_THEGAUNTLET;
extern unk REMAP_BAMBOOZLED;
extern unk REMAP_BANZAIBONSAI;
extern unk REMAP_TORNADOALLEY;
extern unk REMAP_TSUNAMI;
extern unk REMAP_FAHRENHEITFRENZY;
extern unk REMAP_MEDIEVALMADNESS;
extern unk REMAP_WIZARDSANDLIZARDS;
extern unk REMAP_THATSINKINGFEELING;
extern unk REMAP_GOLDRUSH;
extern unk REMAP_DROIDVOID;
extern unk REMAP_RUMBLEINTHEROKS;
extern unk REMAP_CRASHESTOASHES;
extern unk REMAP_DRAINDAMAGE;
extern unk REMAP_ATMOSPHERICPRESSURE;
extern unk REMAP_CRUNCHTIME;
extern unk REMAP_CRASHTEROIDS;
extern unk REMAP_KNIGHTTIME;
extern unk REMAP_GHOSTTOWN;
extern unk REMAP_ICESTATIONBANDICOOT;
extern unk REMAP_CRATEBALLSOFFIRE;
extern unk REMAP_SOLARBOWLER;
extern unk REMAP_CORTEXVORTEX;
extern unk REMAP_SEASHELLSHENANIGANS;
extern unk REMAP_FRONTEND;
extern unk REMAP_GAMEOVER;
extern unk REMAP_SPACE;
extern unk soundbanknames;
extern unk flush_flag;
extern unk timers;
extern unk TimerStrings;
extern unk BufferTypes;
extern unk sectorsizeok;
extern unk NintendoErrorCode;
extern unk saveload_cardformatted;
extern unk BackupHeader;
extern unk HeaderFailed;
extern unk CheckSumFailed;
extern unk CrashFileEnclosed;
extern unk curtime;
extern unk byteNotUsed;
extern unk filesNotUsed;
extern unk fileNo;
extern unk sectorSize;
extern unk stat;
extern unk ct;
extern unk TVertices2;
extern unk MaxVertexCount;
extern unk xytype;
extern unk shaderselected;
extern unk ShaderHasNormals;
extern unk Shaders;
extern unk defaultShader;
extern unk currentLevel;
extern unk nobypass;
extern unk CV_SKINMTX;
extern unk NEW_CV_COLOR_TYPE;
extern unk CV_MTL_COLOR;
extern unk newCV_LIGHTS_OFF;
extern unk CV_LIGHT3_COLOR;
extern unk CV_AMBIENT_COLOR;
extern unk CV_LIGHT1_POS;
extern unk CV_LIGHT2_POS;
extern unk CV_LIGHT3_POS;
extern unk CV_LIGHT1_COLOR;
extern unk CV_LIGHT2_COLOR;
extern unk currentshader;
extern unk currentvtxtype;
extern unk IsWaterObj;
extern unk IsGlassObj;
extern unk matView;
extern unk invWorld;
extern unk matWorldViewProj;
extern unk matProj;
extern unk matWorld;
extern unk matWorldView;
extern unk invWorldView;
extern unk matViewProj;
extern unk CV_WORLDVIEWPROJ;
extern unk CV_WORLDVIEW;
extern unk CV_WORLDVIEWIT;
extern unk CV_CONSTANTS;
extern unk CV_SHADER_PARAMS;
extern unk CV_SCREEN_PARAMS;
extern unk CV_EYE_POSITION;
extern unk CV_LIGHT_POSITION;
extern unk CV_LIGHT_DIRECTION;
extern unk CV_SCREENSPACE_OFFSET;
extern unk CV_WORLD_0;
extern unk CV_UV_OFFSETS_1;
extern unk CV_UV_OFFSETS_2;
extern unk CV_FUR_PARAMS;
extern unk CV_LIGHTS_OFF;
extern unk CV_COLOR_TYPE;
extern unk beamLoc;
extern unk beamLookat;
extern unk max_skin_verts;
extern unk cur_skin_verts;
extern unk c_one;
extern unk SkinLights;
extern unk MaxSkinVerts;
extern unk TVertices;
extern unk date_string;
extern unk time_string;
extern unk months;
extern unk ver_string;
extern unk xpad;
extern unk start2;
extern unk showstats;
extern unk GotPad;
extern unk pad;
extern unk malloctotalram;
extern unk msize;
extern unk mah;
extern unk XDEVICE_TYPE_GAMEPAD_TABLE;
extern unk XDEVICE_TYPE_MEMORY_UNIT_TABLE;
extern unk _ctors;
extern unk _dtors;
extern unk _impure_ptr;
extern unk _ctype_;
extern unk __mb_cur_max;
extern unk _exit_dummy_ref;
extern unk _exit_dummy_decl;
extern unk __PADSpec;
extern unk _half$localstatic0$sqrtf__Ff;
extern unk _three$localstatic1$sqrtf__Ff;
extern unk _half$localstatic0$sqrt__Ff;
extern unk _three$localstatic1$sqrt__Ff;
extern unk LastState;
extern unk __PADFixBits;
extern unk profile;
extern unk __ai_src_time_end;
extern unk __ai_src_time_start;
extern unk task;
extern unk __piReg;
extern unk __cpReg;
extern unk __peReg;
extern unk __memReg;
extern unk FifoObj;
extern unk HW2GXFiltConv;
extern unk DOCacheInitialized;
extern unk DODisplayCache;
extern void  __start(void /* TODO */);
extern void  FindAIType(void /* TODO */);
extern void  LoadAI(void /* TODO */);
extern void  InitAI(void /* TODO */);
extern void  ResetAI(void /* TODO */);
extern void  ResetDRAINDAMAGE(void /* TODO */);
extern void  UpdateDRAINDAMAGE(void /* TODO */);
extern void  FindNearestCreature(void /* TODO */);
extern void  DrawDRAINDAMAGE(void /* TODO */);
extern void  ResetCRUNCHTIME(void /* TODO */);
extern void  UpdateCRUNCHTIME(void /* TODO */);
extern void  DrawCRUNCHTIME(void /* TODO */);
extern void  GetTotalSpaceBossObjectives(void /* TODO */);
extern void  GetCurrentSpaceBossObjectives(void /* TODO */);
extern void  RatioDifferenceAlongLine(void /* TODO */);
extern void  FindAILabel(void /* TODO */);
extern void  FindGongBongerAnim(void /* TODO */);
extern void  PlayerLateralInRange(void /* TODO */);
extern void  PlayerLateralOutOfRange(void /* TODO */);
extern void  MoveCreature(void /* TODO */);
extern void  AheadOfCheckpoint(void /* TODO */);
extern void  GetALONG(void /* TODO */);
extern void  NuVecAdd(void /* TODO */);
extern void  NuVecScale(void /* TODO */);
extern void  RemoveGameObject(void /* TODO */);
extern void  qrand(void /* TODO */);
extern void  NuVecSub(void /* TODO */);
extern void  NuFsqrt(void /* TODO */);
extern void  NuAtan2D(void /* TODO */);
extern void  ResetAnimPacket(void /* TODO */);
extern void  GameSfx(void /* TODO */);
extern void  SeekRot(void /* TODO */);
extern void  UpdateAnimPacket(void /* TODO */);
extern void  NuVecDistSqr(void /* TODO */);
extern void  Draw3DCharacter(void /* TODO */);
extern void  NewRumble(void /* TODO */);
extern void  NewBuzz(void /* TODO */);
extern void  AddFiniteShotDebrisEffect(void /* TODO */);
extern void  DebrisEmitterOrientation(void /* TODO */);
extern void  JudderGameCamera(void /* TODO */);
extern void  NuVecRotateY(void /* TODO */);
extern void  AddGameDebrisRot(void /* TODO */);
extern void  InitVehMasks(void /* TODO */);
extern void  InitVehMask(void /* TODO */);
extern void  SetNewMaskStuff(void /* TODO */);
extern void  AddProjectile(void /* TODO */);
extern void  AddDeb3(void /* TODO */);
extern void  KillPlayer(void /* TODO */);
extern void  NuFabs(void /* TODO */);
extern void  ProcessVehMasks(void /* TODO */);
extern void  NuLgtArcLaser(void /* TODO */);
extern void  DrawVehMasks(void /* TODO */);
extern void  NuSpecialFind(void /* TODO */);
extern void  RatioAlongLine(void /* TODO */);
extern void  GetTopBot(void /* TODO */);
extern void  NewTopBot(void /* TODO */);
extern void  HitCreatures(void /* TODO */);
extern void  HitCrates(void /* TODO */);
extern void  HitItems(void /* TODO */);
extern void  HitWumpa(void /* TODO */);
extern void  OldTopBot(void /* TODO */);
extern void  NuVecRotateX(void /* TODO */);
extern void  NewShadowMaskPlat(void /* TODO */);
extern void  GetSurfaceInfo(void /* TODO */);
extern void  ObjectRotation(void /* TODO */);
extern void  ChangeCharacter(void /* TODO */);
extern void  NuVecMag(void /* TODO */);
extern void  RotDiff(void /* TODO */);
extern void  AddKaboom(void /* TODO */);
extern void  AddGameDebris(void /* TODO */);
extern void  GetDieAnim(void /* TODO */);
extern void  KillGameObject(void /* TODO */);
extern void  NuVecDist(void /* TODO */);
extern void  NuVecXZDist(void /* TODO */);
extern void  ResetHGobjAnim(void /* TODO */);
extern void  StartHGobjAnim(void /* TODO */);
extern void  TurnRot(void /* TODO */);
extern void  FlyGameObject(void /* TODO */);
extern void  UpdateCharacterIdle(void /* TODO */);
extern void  GameSfxLoop(void /* TODO */);
extern void  InitBugAreas(void /* TODO */);
extern void  InBugArea(void /* TODO */);
extern void  ResetBug(void /* TODO */);
extern void  UpdateBugLight(void /* TODO */);
extern void  AddBugLight(void /* TODO */);
extern void  DrawBug(void /* TODO */);
extern void  GetBugPosition(void /* TODO */);
extern void  FurtherALONG(void /* TODO */);
extern void  FurtherBEHIND(void /* TODO */);
extern void  NearestSplinePoint(void /* TODO */);
extern void  PointAlongSpline(void /* TODO */);
extern void  NuLightAddSpotXSpanFade(void /* TODO */);
extern void  ResetGameCameras(void /* TODO */);
extern void  BlendGameCamera(void /* TODO */);
extern void  InitRails(void /* TODO */);
extern void  BestRailPosition(void /* TODO */);
extern void  RailInfo(void /* TODO */);
extern void  ComplexRailPosition(void /* TODO */);
extern void  MoveRailPosition(void /* TODO */);
extern void  LookUpDownRail(void /* TODO */);
extern void  InSplineArea(void /* TODO */);
extern void  MoveGameCamera(void /* TODO */);
extern void  InitCameraTargetMaterial(void /* TODO */);
extern void  NuSplineFind(void /* TODO */);
extern void  SplineDistance(void /* TODO */);
extern void  RatioBetweenEdges(void /* TODO */);
extern void  RumbleCam(void /* TODO */);
extern void  GliderCam(void /* TODO */);
extern void  JeepCamFollowAng(void /* TODO */);
extern void  JeepCamIntro(void /* TODO */);
extern void  NuCameraSet(void /* TODO */);
extern void  JeepCam(void /* TODO */);
extern void  NuVecNorm(void /* TODO */);
extern void  NuVecScaleAccum(void /* TODO */);
extern void  NewShadowMask(void /* TODO */);
extern void  NuMtxSetIdentity(void /* TODO */);
extern void  NuMtxTranslate(void /* TODO */);
extern void  NuMtxPreRotateY(void /* TODO */);
extern void  NuMtxPreRotateX(void /* TODO */);
extern void  NuMtxPreRotateZ(void /* TODO */);
extern void  NuMtlCreate(void /* TODO */);
extern void  NuMtlUpdate(void /* TODO */);
extern void  NuSplineFindPartial(void /* TODO */);
extern void  InitChases(void /* TODO */);
extern void  UpdateCrateBallsOfFireDoors(void /* TODO */);
extern void  ResetChases(void /* TODO */);
extern void  InitChase(void /* TODO */);
extern void  NearestChaserDistance(void /* TODO */);
extern void  UpdateChase(void /* TODO */);
extern void  ChaseActive(void /* TODO */);
extern void  UpdateChases(void /* TODO */);
extern void  DrawChases(void /* TODO */);
extern void  strncasecmp(void /* TODO */);
extern void  FindAnglesZX(void /* TODO */);
extern void  ResetLights(void /* TODO */);
extern void  NuVecXZDistSqr(void /* TODO */);
extern void  PauseGameAudio(void /* TODO */);
extern void  LineCrossed(void /* TODO */);
extern void  GetLights(void /* TODO */);
extern void  WipeCreatures(void /* TODO */);
extern void  WipeCrates(void /* TODO */);
extern void  WipeWumpa(void /* TODO */);
extern void  AddVariableShotDebrisEffect(void /* TODO */);
extern void  CylinderCuboidOverlapXZ(void /* TODO */);
extern void  CylinderCylinderOverlapXZ(void /* TODO */);
extern void  LoseMask(void /* TODO */);
extern void  NuMtxSetScale(void /* TODO */);
extern void  NuMtxRotateY(void /* TODO */);
extern void  NuMtxRotateZ(void /* TODO */);
extern void  NuMtxRotateX(void /* TODO */);
extern void  NuRndrGScnObj(void /* TODO */);
extern void  EvalModelAnim(void /* TODO */);
extern void  AddAnimDebris(void /* TODO */);
extern void  SetLights(void /* TODO */);
extern void  NuHGobjRndrMtxDwa(void /* TODO */);
extern void  SetLevelLights(void /* TODO */);
extern void  cloudInit(void /* TODO */);
extern void  cloudRender(void /* TODO */);
extern void  InitClouds(void /* TODO */);
extern void  CloseClouds(void /* TODO */);
extern void  DoClouds(void /* TODO */);
extern void  NuTexReadBitmap(void /* TODO */);
extern void  NuTexCreate(void /* TODO */);
extern void  NuMemFree(void* mem);
extern void  NuMemSetExternal(void /* TODO */);
extern void  NuGobjCreate(void /* TODO */);
extern void  NuGeomCreate(void /* TODO */);
extern void  NuPrimCreate(void /* TODO */);
extern void  NuGeomCreateVB(void /* TODO */);
extern void  NuVtxStride(void /* TODO */);
extern void  NuErrorProlog(void /* TODO */);
extern void  NuRandFloat(void /* TODO */);
extern void  NuGobjCalcDims(void /* TODO */);
extern void  NuRndrGobj(void /* TODO */);
extern void  NuGobjDestroy(void /* TODO */);
extern void  NuCameraEnableClipping(void /* TODO */);
extern void  NuCameraGetMtx(void /* TODO */);
extern void  ResetCrateType2(void /* TODO */);
extern void  NextCrate(void /* TODO */);
extern void  InitCrates(void /* TODO */);
extern void  CloseCrates(void /* TODO */);
extern void  NewCrateAnimation(void /* TODO */);
extern void  OpenPreviousCheckpoints(void /* TODO */);
extern void  DrawCrates(void /* TODO */);
extern void  GetCrateType(void /* TODO */);
extern void  LowestActiveCrate(void /* TODO */);
extern void  ReadInCrateData(void /* TODO */);
extern void  HeightSortCrateData(void /* TODO */);
extern void  ConvertCrateData(void /* TODO */);
extern void  ReadCrateData(void /* TODO */);
extern void  StartExclamationCrateSequence(void /* TODO */);
extern void  DestroyAllNitroCrates(void /* TODO */);
extern void  CrateOff(void /* TODO */);
extern void  AttackCrate(void /* TODO */);
extern void  HopCratesAbove(void /* TODO */);
extern void  CrateAbove(void /* TODO */);
extern void  CrateBelow(void /* TODO */);
extern void  LowestCrate(void /* TODO */);
extern void  CrateInTheWay(void /* TODO */);
extern void  CrateOnTop(void /* TODO */);
extern void  SaveCrateTypeData(void /* TODO */);
extern void  RestoreCrateTypeData(void /* TODO */);
extern void  AddExtraLife(void /* TODO */);
extern void  AddCrateExplosion(void /* TODO */);
extern void  CrateBounceReaction(void /* TODO */);
extern void  UpdateCrates(void /* TODO */);
extern void  BreakCrate(void /* TODO */);
extern void  CrateInSlot(void /* TODO */);
extern void  ResetInvisibility(void /* TODO */);
extern void  ResetCrate(void /* TODO */);
extern void  ResetCrates(void /* TODO */);
extern void  InitCrateExplosions(void /* TODO */);
extern void  UpdateCrateExplosions(void /* TODO */);
extern void  DrawCrateExplosions(void /* TODO */);
extern void  CrateTopBelow(void /* TODO */);
extern void  CrateBottomAbove(void /* TODO */);
extern void  InCrate(void /* TODO */);
extern void  HitCrateBalloons(void /* TODO */);
extern void  RayIntersectCuboid(void /* TODO */);
extern void  CrateRayCast(void /* TODO */);
extern void  CrateSafety(void /* TODO */);
extern void  GotoCheckpoint(void /* TODO */);
extern void  NuLstGetNext(void /* TODO */);
extern void  NuLstCreate(void /* TODO */);
extern void  NuLstDestroy(void /* TODO */);
extern void  NuMtxSetRotationY(void /* TODO */);
extern void  NuHGobjEvalDwa(void /* TODO */);
extern void  NuHGobjEvalAnim(void /* TODO */);
extern void  NuHGobjEval(void /* TODO */);
extern void  NuLstAlloc(void /* TODO */);
extern void  NuCameraTransformScreenClip(void /* TODO */);
extern void  AddPanelDebris(void /* TODO */);
extern void  ResetCheckpoint(void /* TODO */);
extern void  AddScreenWumpa(void /* TODO */);
extern void  AddTempWumpa(void /* TODO */);
extern void  AddGliderHitPoints(void /* TODO */);
extern void  ShadowInfo(void /* TODO */);
extern void  EShadowInfo(void /* TODO */);
extern void  NewScanInit(void /* TODO */);
extern void  NewScanHandel(void /* TODO */);
extern void  NewRayCastSetHandel(void /* TODO */);
extern void  ResetKabooms(void /* TODO */);
extern void  AddQuad3DrotXYZ(void /* TODO */);
extern void  ResetPlayerMoves(void /* TODO */);
extern void  ResetPlayer(void /* TODO */);
extern void  PlayerStartPos(void /* TODO */);
extern void  RemoveCreature(void /* TODO */);
extern void  CloseCreatures(void /* TODO */);
extern void  ManageCreatures(void /* TODO */);
extern void  AddCreature(void /* TODO */);
extern void  ModelAnimDuration(void /* TODO */);
extern void  LoadCharacterModel(void /* TODO */);
extern void  PurgeCharacterModels(void /* TODO */);
extern void  LoadCharacterModels(void /* TODO */);
extern void  TerrainFailsafe(void /* TODO */);
extern void  NewCharacterIdle(void /* TODO */);
extern void  UpdateRumble(void /* TODO */);
extern void  MovePlayer(void /* TODO */);
extern void  ProcessCreatures(void /* TODO */);
extern void  StoreLocatorMatrices(void /* TODO */);
extern void  DrawCharacterModel(void /* TODO */);
extern void  DrawCreatures(void /* TODO */);
extern void  NewShadowPlat(void /* TODO */);
extern void  ResetAtlas(void /* TODO */);
extern void  SetWeatherStartPos(void /* TODO */);
extern void  ResetJeep(void /* TODO */);
extern void  NewMask(void /* TODO */);
extern void  NuHGobjDestroy(void /* TODO */);
extern void  NuSoundStopStream(void /* TODO */);
extern void  NuHGobjRead(void /* TODO */);
extern void  NuHGobjGetPOI(void /* TODO */);
extern void  InstAnimDataLoad(void /* TODO */);
extern void  HubStart(void /* TODO */);
extern void  AddGameObject(void /* TODO */);
extern void  NuPs2PadSetMotors(void /* TODO */);
extern void  ToggleVehicle(void /* TODO */);
extern void  ResetTubs(void /* TODO */);
extern void  AddAward(void /* TODO */);
extern void  MoveVehicle(void /* TODO */);
extern void  GameRayCast(void /* TODO */);
extern void  NuMtxSetRotationX(void /* TODO */);
extern void  NuVecDot(void /* TODO */);
extern void  MoveLoopXZ(void /* TODO */);
extern void  tbslotBegin(void /* TODO */);
extern void  NewTerrainScaleY(void /* TODO */);
extern void  tbslotEnd(void /* TODO */);
extern void  PlatformCrush(void /* TODO */);
extern void  GameMusic(void /* TODO */);
extern void  BonusTransporter(void /* TODO */);
extern void  DeathTransporter(void /* TODO */);
extern void  GemPathTransporter(void /* TODO */);
extern void  PlayerCreatureCollisions(void /* TODO */);
extern void  PlayerObjectAnimCollision(void /* TODO */);
extern void  CrateCollisions(void /* TODO */);
extern void  NewShadowMaskPlatRot(void /* TODO */);
extern void  NuRndrAddWaterRipple(void /* TODO */);
extern void  AddMaskFeathers(void /* TODO */);
extern void  NuSoundKeyStatus(void /* TODO */);
extern void  WumpaCollisions(void /* TODO */);
extern void  MoveSUBMARINE(void /* TODO */);
extern void  MoveSCOOTER(void /* TODO */);
extern void  MoveSNOWBOARD(void /* TODO */);
extern void  MoveMECH(void /* TODO */);
extern void  MoveFIREENGINE(void /* TODO */);
extern void  MoveGYRO(void /* TODO */);
extern void  MoveMINECART(void /* TODO */);
extern void  MoveMINETUB(void /* TODO */);
extern void  MoveOFFROADER(void /* TODO */);
extern void  MoveCOCO(void /* TODO */);
extern void  MoveSWIMMING(void /* TODO */);
extern void  MoveCRASH(void /* TODO */);
extern void  BonusTiming(void /* TODO */);
extern void  AnimateDIVE(void /* TODO */);
extern void  AnimateATLASPHERE(void /* TODO */);
extern void  AnimateSUBMARINE(void /* TODO */);
extern void  AnimateSCOOTER(void /* TODO */);
extern void  AnimateSNOWBOARD(void /* TODO */);
extern void  AnimateGLIDER(void /* TODO */);
extern void  AnimateDROPSHIP(void /* TODO */);
extern void  AnimateGYRO(void /* TODO */);
extern void  AnimateMECH(void /* TODO */);
extern void  AnimateFIREENGINE(void /* TODO */);
extern void  AnimateJEEP(void /* TODO */);
extern void  AnimateMINECART(void /* TODO */);
extern void  AnimateMINETUB(void /* TODO */);
extern void  AnimateMOSQUITO(void /* TODO */);
extern void  AnimateOFFROADER(void /* TODO */);
extern void  AnimateSWIMMING(void /* TODO */);
extern void  AnimateCOCO(void /* TODO */);
extern void  AnimateCRASH(void /* TODO */);
extern void  InLoadSaveZone(void /* TODO */);
extern void  NewMenu(void /* TODO */);
extern void  UpdateMask(void /* TODO */);
extern void  HubSelect(void /* TODO */);
extern void  HubLevelSelect(void /* TODO */);
extern void  HubMoveVR(void /* TODO */);
extern void  CheckPlayerEvents(void /* TODO */);
extern void  CheckFinish(void /* TODO */);
extern void  CheckGates(void /* TODO */);
extern void  CheckRings(void /* TODO */);
extern void  NuHGobjEvalAnimBlend(void /* TODO */);
extern void  NuHGobjPOIMtx(void /* TODO */);
extern void  NuHGobjEvalDwaBlend(void /* TODO */);
extern void  DrawProbeFX(void /* TODO */);
extern void  NuMtlSetStencilRender(void /* TODO */);
extern void  NuHGobjRndrMtx(void /* TODO */);
extern void  SetCreatureLights(void /* TODO */);
extern void  DrawGlider(void /* TODO */);
extern void  DrawAtlas(void /* TODO */);
extern void  DrawPlayerJeep(void /* TODO */);
extern void  ScaleFlatShadow(void /* TODO */);
extern void  NuHGobjRndr(void /* TODO */);
extern void  Draw3DCrateCount(void /* TODO */);
extern void  NuMtxPreScale(void /* TODO */);
extern void  InitCredits(void /* TODO */);
extern void  DrawCredits(void /* TODO */);
extern void  AddSpacesIntoText(void /* TODO */);
extern void  Text3D(void /* TODO */);
extern void  LoadCutSceneCharacters(void /* TODO */);
extern void  FindCutChar(void /* TODO */);
extern void  InitCutScenes(void /* TODO */);
extern void  CutLoadScreenThreadProc(void /* TODO */);
extern void  LoadCutMovie(void /* TODO */);
extern void  SetCutMovieRate(void /* TODO */);
extern void  UpdateCutMovie(void /* TODO */);
extern void  UpdateCutMovieCamera(void /* TODO */);
extern void  DrawCutMovie(void /* TODO */);
extern void  CloseCutMovie(void /* TODO */);
extern void  StartCutMovie(void /* TODO */);
extern void  PlayCutMovie(void /* TODO */);
extern void  SetCutSceneLights(void /* TODO */);
extern void  InitGameCut(void /* TODO */);
extern void  NewGameCutAnim(void /* TODO */);
extern void  UpdateGameCut(void /* TODO */);
extern void  DrawGameCut(void /* TODO */);
extern void  NewCut(void /* TODO */);
extern void  GetSpaceCut(void /* TODO */);
extern void  MakeDirLightColour(void /* TODO */);
extern void  MakeLightDirection(void /* TODO */);
extern void  strcasecmp(void /* TODO */);
extern void  NuGCutCharAnimProcess(void /* TODO */);
extern void  NuMtxMul(void /* TODO */);
extern void  NuHGobjEvalAnim2(void /* TODO */);
extern void  NuHGobjEvalDwa2(void /* TODO */);
extern void  instNuGCutLocatorUpdate(void /* TODO */);
extern void  NuAnimData2CalcTime(void /* TODO */);
extern void  NuGCutLocatorIsVisble(void /* TODO */);
extern void  NuGCutSceneSysInit(void /* TODO */);
extern void  NuSetCutSceneFindCharactersFn(void /* TODO */);
extern void  NuSetCutSceneCharacterRenderFn(void /* TODO */);
extern void  NuSoundUpdate(void /* TODO */);
extern void  NuSceneLoad(void /* TODO */);
extern void  InitSkinning(void /* TODO */);
extern void  NuDatOpenMem(void /* TODO */);
extern void  NuDatSet(void /* TODO */);
extern void  NuDatClose(void /* TODO */);
extern void  CloseSkinning(void /* TODO */);
extern void  InitXboxGSceneEffects(void /* TODO */);
extern void  NuGCutSceneLoad(void /* TODO */);
extern void  NuGCutSceneFixUp(void /* TODO */);
extern void  instNuGCutSceneCreate(void /* TODO */);
extern void  instNuGCutSceneSetEndCallback(void /* TODO */);
extern void  GetTickCount(void /* TODO */);
extern void  NuRndrClear(void /* TODO */);
extern void  NuRndrBeginScene(void /* TODO */);
extern void  DrawGameMessage(void /* TODO */);
extern void  NuRndrEndScene(void /* TODO */);
extern void  NuRndrSwapScreen(void /* TODO */);
extern void  Sleep(void /* TODO */);
extern void  NuSoundKillAllAudio(void /* TODO */);
extern void  XbWaitForAllBuffersToStop(void /* TODO */);
extern void  LoadFont3D(void /* TODO */);
extern void  MAHLoadingMessage(void /* TODO */);
extern void  CreateThread(void /* TODO */);
extern void  SetThreadPriority(void /* TODO */);
extern void  NuTexAnimProgSysInit(void /* TODO */);
extern void  LoadGBABG(void /* TODO */);
extern void  NuTexAnimProgReadScript(void /* TODO */);
extern void  NuGCutSceneSysUpdate(void /* TODO */);
extern void  NuGCutSceneSysRender(void /* TODO */);
extern void  instNuGCutSceneDestroy(void /* TODO */);
extern void  UnLoadGBABG(void /* TODO */);
extern void  NuTexInit(void /* TODO */);
extern void  NuMtlInit(void /* TODO */);
extern void  NuGobjInit(void /* TODO */);
extern void  instNuGCutSceneStart(void /* TODO */);
extern void  ResetSuperBuffer2(void /* TODO */);
extern void  DebrisSetup(void /* TODO */);
extern void  DebrisRegisterCutoffCameraVec(void /* TODO */);
extern void  ParticleReset(void /* TODO */);
extern void  CreateFadeMtl(void /* TODO */);
extern void  InitXboxEffectSystem(void /* TODO */);
extern void  ResetTimer(void /* TODO */);
extern void  MaxVP(void /* TODO */);
extern void  DebrisSetRenderGroup(void /* TODO */);
extern void  DoInput(void /* TODO */);
extern void  UpdateGameSfx(void /* TODO */);
extern void  NuXboxSoundUpdate(void /* TODO */);
extern void  Debris(void /* TODO */);
extern void  NuGScnUpdate(void /* TODO */);
extern void  GameTiming(void /* TODO */);
extern void  ProcMenu(void /* TODO */);
extern void  UpdateFade(void /* TODO */);
extern void  NuMtlAnimate(void /* TODO */);
extern void  NuTexAnimSetSignals(void /* TODO */);
extern void  NuTexAnimProcess(void /* TODO */);
extern void  NuGScnRndr3(void /* TODO */);
extern void  DrawFade(void /* TODO */);
extern void  NuWaterRender(void /* TODO */);
extern void  DebrisDraw(void /* TODO */);
extern void  DrawPanel(void /* TODO */);
extern void  Reseter(void /* TODO */);
extern void  GC_DiskErrorPoll(void /* TODO */);
extern void  CloseXboxEffectSystem(void /* TODO */);
extern void  NuSceneDestroy(void /* TODO */);
extern void  UpdateTimer(void /* TODO */);
extern void  NuMtxSetTranslation(void /* TODO */);
extern void  HubFromLevel(void /* TODO */);
extern void  InitRandSFX(void /* TODO */);
extern void  PlayRandSFX(void /* TODO */);
extern void  RockSpark(void /* TODO */);
extern void  RockBreak(void /* TODO */);
extern void  CoalSpark(void /* TODO */);
extern void  CoalBreak(void /* TODO */);
extern void  DynaBreak(void /* TODO */);
extern void  RBodyInitClasses(void /* TODO */);
extern void  RBodyMove(void /* TODO */);
extern void  RBodyImpact(void /* TODO */);
extern void  InitDeb3(void /* TODO */);
extern void  AddDeb3Ang(void /* TODO */);
extern void  JonMaskFPS(void /* TODO */);
extern void  JonExtraDraw(void /* TODO */);
extern void  LaunchObjects(void /* TODO */);
extern void  ProcDeb3(void /* TODO */);
extern void  DrawDeb3(void /* TODO */);
extern void  NuMtxSkewSymmetric(void /* TODO */);
extern void  NuMtxMulR(void /* TODO */);
extern void  NuMtxAddR(void /* TODO */);
extern void  NuMtxOrth(void /* TODO */);
extern void  NuMtxInvR(void /* TODO */);
extern void  NuVecInvMtxRotate(void /* TODO */);
extern void  NuVecCross(void /* TODO */);
extern void  NuMtxSetRotateXYZ(void /* TODO */);
extern void  NewRayCast(void /* TODO */);
extern void  NewShadow(void /* TODO */);
extern void  FireBossWaterFire(void /* TODO */);
extern void  NuBridgeOn(void /* TODO */);
extern void  NuCameraClipTestPoints(void /* TODO */);
extern void  CubeImpact(void /* TODO */);
extern void  FullReflect(void /* TODO */);
extern void  NuSpecialDrawAt(void /* TODO */);
extern void  NuRndrAddShadow(void /* TODO */);
extern void  RemapAccentedCharacter(void /* TODO */);
extern void  Reset3DFontObjects(void /* TODO */);
extern void  InitFont3D(void /* TODO */);
extern void  CombinationCharacterBD(void /* TODO */);
extern void  CombinationCharacterBC(void /* TODO */);
extern void  Text3D2(void /* TODO */);
extern void  DrawPanel3DCharacter(void /* TODO */);
extern void  DrawPanel3DObject(void /* TODO */);
extern void  InitProbe(void /* TODO */);
extern void  JonProbe(void /* TODO */);
extern void  ResetTempCharacter(void /* TODO */);
extern void  ResetTempCharacter2(void /* TODO */);
extern void  UpdateTempCharacter(void /* TODO */);
extern void  DrawTempCharacter(void /* TODO */);
extern void  DrawTempCharacter2(void /* TODO */);
extern void  ResetAwards(void /* TODO */);
extern void  UpdateAwards(void /* TODO */);
extern void  CalculateGamePercentage(void /* TODO */);
extern void  DrawAwards(void /* TODO */);
extern void  Draw3DObject(void /* TODO */);
extern void  ActiveAwards(void /* TODO */);
extern void  HubDrawItems(void /* TODO */);
extern void  ResetGame(void /* TODO */);
extern void  FinishHGobjAnim(void /* TODO */);
extern void  InitVehicleToggles(void /* TODO */);
extern void  ResetVehicleControl(void /* TODO */);
extern void  DrawNextVehicle(void /* TODO */);
extern void  UpdateKabooms(void /* TODO */);
extern void  FlyWumpa(void /* TODO */);
extern void  DrawKabooms(void /* TODO */);
extern void  InitPositions(void /* TODO */);
extern void  NewLevelTime(void /* TODO */);
extern void  ClockOff(void /* TODO */);
extern void  FindClock(void /* TODO */);
extern void  LoadWumpa(void /* TODO */);
extern void  InitWumpa(void /* TODO */);
extern void  ResetWumpa(void /* TODO */);
extern void  UpdateWumpa(void /* TODO */);
extern void  UpdateScreenWumpas(void /* TODO */);
extern void  DrawWumpa(void /* TODO */);
extern void  WumpaHitTerrain(void /* TODO */);
extern void  AddFlyingWumpa(void /* TODO */);
extern void  MakeMaskMatrix(void /* TODO */);
extern void  ResetMaskFeathers(void /* TODO */);
extern void  UpdateMaskFeathers(void /* TODO */);
extern void  DrawMaskFeathers(void /* TODO */);
extern void  InputNewLetter(void /* TODO */);
extern void  CleanLetters(void /* TODO */);
extern void  MakeEditText(void /* TODO */);
extern void  DrawNameInputTable(void /* TODO */);
extern void  GetMenuInfo(void /* TODO */);
extern void  ResetLoadSaveCharacter(void /* TODO */);
extern void  ResetBonus(void /* TODO */);
extern void  ResetDeath(void /* TODO */);
extern void  ResetGemPath(void /* TODO */);
extern void  ResetItems(void /* TODO */);
extern void  ResetLevel(void /* TODO */);
extern void  OpenGame(void /* TODO */);
extern void  NewGame(void /* TODO */);
extern void  NextMenuEntry(void /* TODO */);
extern void  DrawMenuEntry(void /* TODO */);
extern void  DrawMenuEntry2(void /* TODO */);
extern void  DrawNODATAAVAILABLE(void /* TODO */);
extern void  DrawMenu(void /* TODO */);
extern void  MakeTimeI(void /* TODO */);
extern void  MakeLevelTimeString(void /* TODO */);
extern void  StartTimeTrial(void /* TODO */);
extern void  ResetTimeTrial(void /* TODO */);
extern void  GCGetLang(void /* TODO */);
extern void  DefaultGame(void /* TODO */);
extern void  DefaultTimeTrialNames(void /* TODO */);
extern void  StartTransporter(void /* TODO */);
extern void  FinishTransporter(void /* TODO */);
extern void  TransporterGo(void /* TODO */);
extern void  DrawTransporters(void /* TODO */);
extern void  ResetAkuAkuAdvice(void /* TODO */);
extern void  InitLevel(void /* TODO */);
extern void  InitGameMode(void /* TODO */);
extern void  InitSplineTable(void /* TODO */);
extern void  SplinePointTilt(void /* TODO */);
extern void  SplinePointAngle(void /* TODO */);
extern void  InitObjectTable(void /* TODO */);
extern void  DistanceToLine(void /* TODO */);
extern void  DrawParallax(void /* TODO */);
extern void  RayIntersectSphere(void /* TODO */);
extern void  WumpaRayCast(void /* TODO */);
extern void  DrawTarget(void /* TODO */);
extern void  UpdateLevel(void /* TODO */);
extern void  DrawLevel(void /* TODO */);
extern void  AddWarpDebris(void /* TODO */);
extern void  AddMechanicalDebris(void /* TODO */);
extern void  PickupItem(void /* TODO */);
extern void  GetCurrentLevelObjectives(void /* TODO */);
extern void  PickupCrateGem(void /* TODO */);
extern void  PickupCrystal(void /* TODO */);
extern void  PickupPower(void /* TODO */);
extern void  PickupBonusGem(void /* TODO */);
extern void  KillItem(void /* TODO */);
extern void  CreatureTopBelow(void /* TODO */);
extern void  ParseNintendoErrorCode(void /* TODO */);
extern void  InitLoadSaveDeleteScreen(void /* TODO */);
extern void  storemenu1(void /* TODO */);
extern void  storemenu2(void /* TODO */);
extern void  restoremenu1(void /* TODO */);
extern void  restoremenu2(void /* TODO */);
extern void  NewLanguage(void /* TODO */);
extern void  ResetPlayerEvents(void /* TODO */);
extern void  ResetGates(void /* TODO */);
extern void  ResetRings(void /* TODO */);
extern void  ResetProjectiles(void /* TODO */);
extern void  ResumeGame(void /* TODO */);
extern void  loadsaveCallEachFrame(void /* TODO */);
extern void  MemCardRetry(void /* TODO */);
extern void  XbLaunchDashboardToFreeSpace(void /* TODO */);
extern void  Managememcard(void /* TODO */);
extern void  UpdateSaveSlots(void /* TODO */);
extern void  XbUpdateDateStamp(void /* TODO */);
extern void  MemCardDelete(void /* TODO */);
extern void  GetStringIdx(void /* TODO */);
extern void  DrawGameSlot(void /* TODO */);
extern void  DrawGameSlots(void /* TODO */);
extern void  XbGetNumControllers(void /* TODO */);
extern void  NuRndrRectUV2di(void /* TODO */);
extern void  JStrLen(void /* TODO */);
extern void  UpdatePanelItem(void /* TODO */);
extern void  GameAudioUpdate(void /* TODO */);
extern void  ObjectCylinderCollision(void /* TODO */);
extern void  NuBridgeCreate(void /* TODO */);
extern void  ResetVehicleLevel(void /* TODO */);
extern void  __lshrdi3(void /* TODO */);
extern void  CreatureRayCast(void /* TODO */);
extern void  InitGameDebris(void /* TODO */);
extern void  AddGameDebrisMtx(void /* TODO */);
extern void  LookupDebrisEffect(void /* TODO */);
extern void  AddVariableShotDebrisEffectMtx2(void /* TODO */);
extern void  frand(void /* TODO */);
extern void  NuRndrAddFootPrint(void /* TODO */);
extern void  ClearGameObjects(void /* TODO */);
extern void  CountGameObjects(void /* TODO */);
extern void  ResetGameObject(void /* TODO */);
extern void  GameObjectRadius(void /* TODO */);
extern void  GameObjectOverlap(void /* TODO */);
extern void  UpdateProjectiles(void /* TODO */);
extern void  DrawProjectiles(void /* TODO */);
extern void  ObjectToAtlas(void /* TODO */);
extern void  ShadowDir(void /* TODO */);
extern void  ShadowRoofInfo(void /* TODO */);
extern void  InstSceneLoad(void /* TODO */);
extern void  InstInit(void /* TODO */);
extern void  InstClose(void /* TODO */);
extern void  NuLstFree(void /* TODO */);
extern void  NuAnimDataLoadBuff(void /* TODO */);
extern void  GenerateJeepWheelPoint(void /* TODO */);
extern void  NewGenerateJeepMatrix(void /* TODO */);
extern void  SpinWheelsJeep(void /* TODO */);
extern void  GenerateJeepTargets(void /* TODO */);
extern void  TiltSeek(void /* TODO */);
extern void  TiltJeep(void /* TODO */);
extern void  LimitSpeedZbyXZ(void /* TODO */);
extern void  MovePlayerJeep(void /* TODO */);
extern void  AddBalloon(void /* TODO */);
extern void  ProcessJeepTrail(void /* TODO */);
extern void  FindTerrainType(void /* TODO */);
extern void  SetUpJeepWheelPositions(void /* TODO */);
extern void  NewInitTrail(void /* TODO */);
extern void  DrawJeep(void /* TODO */);
extern void  LimitCam(void /* TODO */);
extern void  DoCamMtx(void /* TODO */);
extern void  BlendNUVECs(void /* TODO */);
extern void  InitEnemyJeep(void /* TODO */);
extern void  AnimateForLightsEnemyJeep(void /* TODO */);
extern void  ProcessEnemyJeep(void /* TODO */);
extern void  InitEnemyJeeps(void /* TODO */);
extern void  DrawEnemyJeep(void /* TODO */);
extern void  DrawEnemyJeeps(void /* TODO */);
extern void  ProcessEnemyJeeps(void /* TODO */);
extern void  AnimateForLightsEnemyJeeps(void /* TODO */);
extern void  PlayerHitBuggies(void /* TODO */);
extern void  LoadBuggyData(void /* TODO */);
extern void  WesternRaceManager(void /* TODO */);
extern void  LoadWesternArenaData(void /* TODO */);
extern void  WesternArenaReset(void /* TODO */);
extern void  DrawWesternArenaLevelExtra(void /* TODO */);
extern void  ProcessWesternArenaLevel(void /* TODO */);
extern void  ProcessJeepTrails(void /* TODO */);
extern void  CurrentWesternPosition(void /* TODO */);
extern void  EmptyTrail(void /* TODO */);
extern void  NewFadeOutLastTrail(void /* TODO */);
extern void  NewSetTrailPos(void /* TODO */);
extern void  NewFindTrailAng(void /* TODO */);
extern void  DrawJeepTrails(void /* TODO */);
extern void  InitFireBoss(void /* TODO */);
extern void  DrawFireBoss(void /* TODO */);
extern void  JonnySteam(void /* TODO */);
extern void  ProcessFireBoss(void /* TODO */);
extern void  CheckAgainstFireBoss(void /* TODO */);
extern void  FireBossReset(void /* TODO */);
extern void  DrawFireBossLevelExtra(void /* TODO */);
extern void  ProcessFireBossLevel(void /* TODO */);
extern void  GetTotalFireBossObjectives(void /* TODO */);
extern void  GetCurrentFireBossObjectives(void /* TODO */);
extern void  FindJeepBalloon(void /* TODO */);
extern void  ProcessGenericTrail(void /* TODO */);
extern void  SeekHalfLife(void /* TODO */);
extern void  ProcessTimer(void /* TODO */);
extern void  SetNuVecPntr(void /* TODO */);
extern void  NuVecMtxRotate(void /* TODO */);
extern void  NuVecMtxTransform(void /* TODO */);
extern void  FindSplineTargetPoint(void /* TODO */);
extern void  SetNuVec(void /* TODO */);
extern void  CheckAgainstRocks(void /* TODO */);
extern void  TerrainVehicleSoft(void /* TODO */);
extern void  FindSurfaceNormalAndUnembedd(void /* TODO */);
extern void  SeekAngHalfLife(void /* TODO */);
extern void  DotProduct(void /* TODO */);
extern void  ApplyFriction(void /* TODO */);
extern void  GetLocatorMtx(void /* TODO */);
extern void  MyInitModelNew(void /* TODO */);
extern void  ASin360f(void /* TODO */);
extern void  MyDrawModelNew(void /* TODO */);
extern void  FindSplineClosestPointAndDist(void /* TODO */);
extern void  NuAtani(void /* TODO */);
extern void  SeekAngHalfLife360f(void /* TODO */);
extern void  SeekHalfLifeNUVEC(void /* TODO */);
extern void  Rationalise360f(void /* TODO */);
extern void  fsign(void /* TODO */);
extern void  MyAnimateModelNew(void /* TODO */);
extern void  NuQuatSlerp(void /* TODO */);
extern void  NuQuatToMtx(void /* TODO */);
extern void  NuMtxScale(void /* TODO */);
extern void  TerrainSetCur(void /* TODO */);
extern void  terraininit(void /* TODO */);
extern void  NuRndrTrail(void /* TODO */);
extern void  MyGameSfx(void /* TODO */);
extern void  MyResetAnimPacket(void /* TODO */);
extern void  MyChangeAnim(void /* TODO */);
extern void  AddRock(void /* TODO */);
extern void  NuVecMagSqr(void /* TODO */);
extern void  MyGameSfxLoop(void /* TODO */);
extern void  frandPN(void /* TODO */);
extern void  GetLocatorMtxMyDraw(void /* TODO */);
extern void  KeepHoldOnRock(void /* TODO */);
extern void  InitJeepRocks(void /* TODO */);
extern void  DrawJeepRocks(void /* TODO */);
extern void  ProcessJeepRocks(void /* TODO */);
extern void  ProcessRockRockCollisions(void /* TODO */);
extern void  LoadLights(void /* TODO */);
extern void  UpdateGlobals(void /* TODO */);
extern void  ScaleColour(void /* TODO */);
extern void  SortLights(void /* TODO */);
extern void  FindNearestLights(void /* TODO */);
extern void  CalculateSingleLightProportion(void /* TODO */);
extern void  FindLightProportion(void /* TODO */);
extern void  RotateDirectionalLight(void /* TODO */);
extern void  SetNearestLights(void /* TODO */);
extern void  GetLightPosition(void /* TODO */);
extern void  NuLightSetDirectionalLights(void /* TODO */);
extern void  NuLightSetAmbientLight(void /* TODO */);
extern void* NuMemAlloc(u32 size);
extern void  XbEnumerateSaveGames(void /* TODO */);
extern void  InvalidateSaveSlots(void /* TODO */);
extern void  saveloadASCallEachFrame(void /* TODO */);
extern void  saveloadASSave(void /* TODO */);
extern void  saveloadASDelete(void /* TODO */);
extern void  saveloadASFormat(void /* TODO */);
extern void  GetLastError(void /* TODO */);
extern void  DoRead(void /* TODO */);
extern void  UpdateTime(void /* TODO */);
extern void  InitTexAnimScripts(void /* TODO */);
extern void  SetTexAnimSignals(void /* TODO */);
extern void  InitCreatureModels(void /* TODO */);
extern void  InitCreatures(void /* TODO */);
extern void  IsTitleScreen(void /* TODO */);
extern void  InitParticleSystem(void /* TODO */);
extern void  InitWorld(void /* TODO */);
extern void  ResetSuperBuffer(void /* TODO */);
extern void  LoadLevel(void /* TODO */);
extern void  DrawWorld(void /* TODO */);
extern void  PauseRumble(void /* TODO */);
extern void  PauseGame(void /* TODO */);
extern void  TBCODESTART(void /* TODO */);
extern void  TBCODEEND(void /* TODO */);
extern void  TBDRAWSTART(void /* TODO */);
extern void  TBDRAWEND(void /* TODO */);
extern void  InitPauseRender(void /* TODO */);
extern void  ClosePauseRender(void /* TODO */);
extern void  HandlePauseRender(void /* TODO */);
extern void  SetLevel(void /* TODO */);
extern void  firstscreenfade(void /* TODO */);
extern void  CopyFilesThreadProc(void /* TODO */);
extern void  firstscreens(void /* TODO */);
extern void  main(void /* TODO */);
extern void  NuSceneReader2(void /* TODO */);
extern void  NuRndrRect2di(void /* TODO */);
extern void  NuRndrInitWorld(void /* TODO */);
extern void  NuSceneReader(void /* TODO */);
extern void  BuildVisiTable(void /* TODO */);
extern void  NuBridgeRegisterBaseScene(void /* TODO */);
extern void  NuBridgeInit(void /* TODO */);
extern void  NuWindInit(void /* TODO */);
extern void  noterraininit(void /* TODO */);
extern void  LoadVehicleStuff(void /* TODO */);
extern void  TerrainPlatformOldUpdate(void /* TODO */);
extern void  NuBridgeUpdate(void /* TODO */);
extern void  NuWindUpdate(void /* TODO */);
extern void  TerrainPlatformNewUpdate(void /* TODO */);
extern void  CreateAlphaBlendTexture64(void /* TODO */);
extern void  NuLightMatInit(void /* TODO */);
extern void  NuShaderSetBypassShaders(void /* TODO */);
extern void  NuStartLoadScreen(void /* TODO */);
extern void  CreateAlphaBlendTexture256128_32(void /* TODO */);
extern void  InitLocalSfx(void /* TODO */);
extern void  InitSpecular(void /* TODO */);
extern void  NuLigthSetPolyHazeMat(void /* TODO */);
extern void  NuStopLoadScreen(void);
extern void  NuBridgeDraw(void /* TODO */);
extern void  NuWindDraw(void /* TODO */);
extern void  ResumeGameAudio(void /* TODO */);
extern void  XbPollPeripherals(void /* TODO */);
extern void  XbPollAllControllers(void /* TODO */);
extern void  NuPs2ReadPad(void /* TODO */);
extern void  XbGetWorkingController(void /* TODO */);
extern void  NuMtlDestroy(void /* TODO */);
extern void  NuVpGetCurrentViewport(void /* TODO */);
extern void  NudxFw_MakeBackBufferCopy(void /* TODO */);
extern void  __ashldi3(void /* TODO */);
extern void  InitLevelSfxTables(void /* TODO */);
extern void  InitGlobalSfx(void /* TODO */);
extern void  NuTexDestroy(void /* TODO */);
extern void  __main(void /* TODO */);
extern void  MC_Init(void /* TODO */);
extern void  Version(void /* TODO */);
extern void  NuPs2Init(void /* TODO */);
extern void  DebrisMalloc(void /* TODO */);
extern void  NuTrigInit(void /* TODO */);
extern void  NuVpInit(void /* TODO */);
extern void  NuRndrInitEx(void /* TODO */);
extern void  NuLightInit(void /* TODO */);
extern void  NuCameraCreate(void /* TODO */);
extern void  NuPs2OpenPad(void /* TODO */);
extern void  tbsetCreate(void /* TODO */);
extern void  NuRandSeed(void /* TODO */);
extern void  InitPadPlayRecord(void /* TODO */);
extern void  VehicleSetup(void /* TODO */);
extern void  NuLgtSetArcMat(void /* TODO */);
extern void  InitPlayerEvents(void /* TODO */);
extern void  NuSoundSetLevelAmbience(void /* TODO */);
extern void  ResetPanelDebris(void /* TODO */);
extern void  ResetGameSfx(void /* TODO */);
extern void  NuInitFrameAdvance(void /* TODO */);
extern void  NuGetFrameAdvance(void /* TODO */);
extern void  ProcessGlass(void /* TODO */);
extern void  NuPs2PadDemoEnd(void /* TODO */);
extern void  NuRndrWaterRippleUpdate(void /* TODO */);
extern void  ProcessVehicleLevel(void /* TODO */);
extern void  DebrisCollisionCheck(void /* TODO */);
extern void  UpdatePlayerStats(void /* TODO */);
extern void  UpdatePanelDebris(void /* TODO */);
extern void  NuLightFog(void /* TODO */);
extern void  GameVP(void /* TODO */);
extern void  DrawExtraCreatures(void /* TODO */);
extern void  NuWaterSpeed(void /* TODO */);
extern void  ApplyVisiTable(void /* TODO */);
extern void  DrawVehicleTrail(void /* TODO */);
extern void  DrawMask(void /* TODO */);
extern void  DrawRings(void /* TODO */);
extern void  DrawCarpet(void /* TODO */);
extern void  NuRndrShadPolys(void /* TODO */);
extern void  NuRndrWaterRip(void /* TODO */);
extern void  NuRndrFootPrints(void /* TODO */);
extern void  NuRndrFx(void /* TODO */);
extern void  NuGlassRenderStatic(void /* TODO */);
extern void  NuDynamicWaterUpdate(void /* TODO */);
extern void  ReleaseVisiTable(void /* TODO */);
extern void  UpdateChaseRunAnim(void /* TODO */);
extern void  ResetTub(void /* TODO */);
extern void  MoveTub(void /* TODO */);
extern void  UpdateArrow(void /* TODO */);
extern void  DrawPanel3DArrow(void /* TODO */);
extern void  DrawPanel3DTempCharacter(void /* TODO */);
extern void  NextLetter(void /* TODO */);
extern void  Draw3DCheckpointLetters(void /* TODO */);
extern void  DrawTimeTrialTimes(void /* TODO */);
extern void  BigOutOf(void /* TODO */);
extern void  DrawWorldToPanelWumpa(void /* TODO */);
extern void  DrawPanelDebris(void /* TODO */);
extern void  NuVpSetSize(void /* TODO */);
extern void  GetGliderHealthPercentage(void /* TODO */);
extern void  GetMaxLevelObjectives(void /* TODO */);
extern void  BossBar(void /* TODO */);
extern void  GetRumblePlayerHealthPercentage(void /* TODO */);
extern void  RumbleHeadUpDisplay(void /* TODO */);
extern void  NuSoundInit(void /* TODO */);
extern void  NuSoundLocalSet(void /* TODO */);
extern void  NuSoundPlayStereo(void /* TODO */);
extern void  NuSoundPlayStereo2(void /* TODO */);
extern void  NuSoundPauseSfx(void /* TODO */);
extern void  NuSoundResumeSfx(void /* TODO */);
extern void  NuSoundPlay3d(void /* TODO */);
extern void  NuSoundPlayChan(void /* TODO */);
extern void  NuSoundPlay(void /* TODO */);
extern void  NuSoundPlay3dLoopSfx(void /* TODO */);
extern void  NuSoundPlayLoop(void /* TODO */);
extern void  GetLang(void /* TODO */);
extern void  GetDiskErrString(void /* TODO */);
extern void  MoveGlider(void /* TODO */);
extern void  MoveAtlas(void /* TODO */);
extern void  PickGliderTarget(void /* TODO */);
extern void  GetBigGunBestTarget(void /* TODO */);
extern void  GetBattleShipBestTarget(void /* TODO */);
extern void  GetGunBoatBestTarget(void /* TODO */);
extern void  GetZoffaBestTarget(void /* TODO */);
extern void  StillLockedOnTarget(void /* TODO */);
extern void  InitGlider(void /* TODO */);
extern void  GliderFire(void /* TODO */);
extern void  InitWeatherBossTarget(void /* TODO */);
extern void  DrawWeatherBossTarget(void /* TODO */);
extern void  ProcessWeatherBossTarget(void /* TODO */);
extern void  ControlGliderWeatherBoss(void /* TODO */);
extern void  GetWeatherBossPos(void /* TODO */);
extern void  ControlGlider(void /* TODO */);
extern void  ProcessGliderMovement(void /* TODO */);
extern void  GliderSmoke(void /* TODO */);
extern void  ExplodeGlider(void /* TODO */);
extern void  DeadGliderWB(void /* TODO */);
extern void  DeadGliderCoco(void /* TODO */);
extern void  ProcessGliderMovementWB(void /* TODO */);
extern void  GliderBulletsHitThings(void /* TODO */);
extern void  GliderBombsHitThings(void /* TODO */);
extern void  CollideWithBattleShips(void /* TODO */);
extern void  ProcessFireFlyIntro(void /* TODO */);
extern void  ProcessCrashteroidsIntro(void /* TODO */);
extern void  DrawZoffa(void /* TODO */);
extern void  DrawZoffaUFOs(void /* TODO */);
extern void  TeleportManager(void /* TODO */);
extern void  MoveZoffaUFO(void /* TODO */);
extern void  FindFreeHova(void /* TODO */);
extern void  InitHova(void /* TODO */);
extern void  InitSatellite(void /* TODO */);
extern void  DrawSatellite(void /* TODO */);
extern void  ProcessSatellite(void /* TODO */);
extern void  ProcessSatellites(void /* TODO */);
extern void  DrawSatellites(void /* TODO */);
extern void  InitSpaceStation(void /* TODO */);
extern void  InitSpaceStations(void /* TODO */);
extern void  DrawSpaceStation(void /* TODO */);
extern void  ProcessSpaceStation(void /* TODO */);
extern void  ProcessSpaceStations(void /* TODO */);
extern void  DrawSpaceStations(void /* TODO */);
extern void  GrabGliderBullet(void /* TODO */);
extern void  FreeGliderBullet(void /* TODO */);
extern void  DrawGliderBullets(void /* TODO */);
extern void  InitPlane(void /* TODO */);
extern void  DrawPlane(void /* TODO */);
extern void  MovePlane(void /* TODO */);
extern void  FarmReset(void /* TODO */);
extern void  ProcessFarmLevel(void /* TODO */);
extern void  DrawFarmLevelExtra(void /* TODO */);
extern void  DrawGliderTarget(void /* TODO */);
extern void  GliderCamWeatherBoss(void /* TODO */);
extern void  FindFreeAsteroid(void /* TODO */);
extern void  GetRandomGliderLevelEdgePoint(void /* TODO */);
extern void  InitAsteroid(void /* TODO */);
extern void  InitAsteroids(void /* TODO */);
extern void  DrawAsteroid(void /* TODO */);
extern void  ProcessAsteroid(void /* TODO */);
extern void  ProcessAsteroids(void /* TODO */);
extern void  DrawAsteroids(void /* TODO */);
extern void  PossIntersect(void /* TODO */);
extern void  LinesIntersectEllipse(void /* TODO */);
extern void  GetCurrentFarmObjectives(void /* TODO */);
extern void  InitGunBoat(void /* TODO */);
extern void  InitGunBoats(void /* TODO */);
extern void  DrawGunBoat(void /* TODO */);
extern void  ProcessGunBoat(void /* TODO */);
extern void  ProcessGunBoats(void /* TODO */);
extern void  InitBigGun(void /* TODO */);
extern void  InitBigGuns(void /* TODO */);
extern void  DrawBigGun(void /* TODO */);
extern void  ProcessBigGun(void /* TODO */);
extern void  ProcessBigGuns(void /* TODO */);
extern void  DrawBigGuns(void /* TODO */);
extern void  CollideWithBattleShip(void /* TODO */);
extern void  InitBattleShip(void /* TODO */);
extern void  InitBattleShips(void /* TODO */);
extern void  DrawBattleShip(void /* TODO */);
extern void  ProcessBattleShip(void /* TODO */);
extern void  ProcessBattleShips(void /* TODO */);
extern void  InitWeatherBoss_a(void /* TODO */);
extern void  InitWeatherBoss(void /* TODO */);
extern void  ProcessBazookaToken(void /* TODO */);
extern void  DrawBazookaToken(void /* TODO */);
extern void  DrawWeatherBoss_a(void /* TODO */);
extern void  WeatherBossNextAction(void /* TODO */);
extern void  ProcessWeatherBoss_a(void /* TODO */);
extern void  GetCurrentWeatherBossObjectives(void /* TODO */);
extern void  FireWBBolt(void /* TODO */);
extern void  UnleashLighteningHail(void /* TODO */);
extern void  ProcessWeatherBoss(void /* TODO */);
extern void  DrawWeatherBoss(void /* TODO */);
extern void  DrawTorpedoTarget(void /* TODO */);
extern void  FireFlyReset(void /* TODO */);
extern void  DrawFireFlyLevelExtra(void /* TODO */);
extern void  ProcessFireFlyLevel(void /* TODO */);
extern void  GetCurrentFireFlyObjectives(void /* TODO */);
extern void  WeatherResearchReset(void /* TODO */);
extern void  DrawWeatherResearchLevelExtra(void /* TODO */);
extern void  ProcessWeatherResearchLevel(void /* TODO */);
extern void  GetCurrentWeatherResearchObjectives(void /* TODO */);
extern void  SpaceArenaReset(void /* TODO */);
extern void  DrawSpaceArenaLevelExtra(void /* TODO */);
extern void  ProcessSpaceArenaLevel(void /* TODO */);
extern void  GetCurrentSpaceArenaObjectives(void /* TODO */);
extern void  CollidePlayerPoint(void /* TODO */);
extern void  InitLighteningHail(void /* TODO */);
extern void  DrawLighteningHail(void /* TODO */);
extern void  ProcessLighteningHail(void /* TODO */);
extern void  FindFreeWBBoltOfType(void /* TODO */);
extern void  FindFreeWBBolt(void /* TODO */);
extern void  InitWBBolts(void /* TODO */);
extern void  DrawWBBolts(void /* TODO */);
extern void  ProcessWBBolts(void /* TODO */);
extern void  WeatherBossReset(void /* TODO */);
extern void  InitWBIntro(void /* TODO */);
extern void  DrawWeatherBossLevelExtra(void /* TODO */);
extern void  ProcessWeatherBossLevel(void /* TODO */);
extern void  ProcessWBIntro(void /* TODO */);
extern void  ProcessEarthBossLevel(void /* TODO */);
extern void  DrawEarthBossLevelExtra(void /* TODO */);
extern void  EarthBossReset(void /* TODO */);
extern void  GetCurrentRumbleObjectives(void /* TODO */);
extern void  ControlAtlas(void /* TODO */);
extern void  ProcessMovementAtlas(void /* TODO */);
extern void  UnembedRayCastAtlas(void /* TODO */);
extern void  UnembedRayCastAtlasSimple(void /* TODO */);
extern void  AdjustAtlasRotations(void /* TODO */);
extern void  ProcessPlatformsAtlas(void /* TODO */);
extern void  TerrainAtlas(void /* TODO */);
extern void  CheckAtlasGround(void /* TODO */);
extern void  KillAtlasphere(void /* TODO */);
extern void  InitAtlas(void /* TODO */);
extern void  InitTrail(void /* TODO */);
extern void  ProcessAtlas(void /* TODO */);
extern void  ProcessAtlasTrail(void /* TODO */);
extern void  InitEarthBoss(void /* TODO */);
extern void  JonnyParticles(void /* TODO */);
extern void  DrawJonny(void /* TODO */);
extern void  DrawEarthBoss(void /* TODO */);
extern void  UpdateRumbleCamTween(void /* TODO */);
extern void  ProcessEarthBossActions(void /* TODO */);
extern void  GetRumbleTotalRoks(void /* TODO */);
extern void  GetRumblePlayerRoks(void /* TODO */);
extern void  ShootRoksSkyward(void /* TODO */);
extern void  AllRoksSkyward(void /* TODO */);
extern void  AddRockVel(void /* TODO */);
extern void  InitRumblePanel(void /* TODO */);
extern void  ProcessRumblePanel(void /* TODO */);
extern void  GetRumbleCrunchRoks(void /* TODO */);
extern void  CheckAtlasVortex(void /* TODO */);
extern void  ProcessEarthBossVortex(void /* TODO */);
extern void  ProcessAtlasAtlasCollisions(void /* TODO */);
extern void  ProcessAtlasAtlasCollisions_a(void /* TODO */);
extern void  FadeOutLastTrail(void /* TODO */);
extern void  PointLineSide(void /* TODO */);
extern void  TrailPointInPoly(void /* TODO */);
extern void  PointsSame(void /* TODO */);
extern void  SetTrailPos(void /* TODO */);
extern void  FindTrailAng(void /* TODO */);
extern void  FindJeepRock(void /* TODO */);
extern void  DrawJeepRock(void /* TODO */);
extern void  SmashRockIntoTwo(void /* TODO */);
extern void  ProcessJeepRock(void /* TODO */);
extern void  NuMtxSetRotationZ(void /* TODO */);
extern void  NewRayCastMask(void /* TODO */);
extern void  MyGameSfxLoopVolPitch(void /* TODO */);
extern void  DebFree(void /* TODO */);
extern void  AddDebrisEffect(void /* TODO */);
extern void  SeekAngLimHalfLife360f(void /* TODO */);
extern void  LimitAng360f(void /* TODO */);
extern void  SeekHalfLifeLim(void /* TODO */);
extern void  TryUnembeddPointDir(void /* TODO */);
extern void  TryUnembeddPointSafe(void /* TODO */);
extern void  TryUnembeddPointDirSimple(void /* TODO */);
extern void  NuMtxInv(void /* TODO */);
extern void  NuMtxToQuat(void /* TODO */);
extern void  NuQuatMul(void /* TODO */);
extern void  TerrainPlatId(void /* TODO */);
extern void  TerrainPlatGetMtx(void /* TODO */);
extern void  NuVecInvMtxTransform(void /* TODO */);
extern void  NewRayCastPlatForm(void /* TODO */);
extern void  GetVolumeI(void /* TODO */);
extern void  CrossProduct(void /* TODO */);
extern void  SetNuQuat(void /* TODO */);
extern void  NuQuatNormalise(void /* TODO */);
extern void  SetNuVecPntrA(void /* TODO */);
extern void  ControlledDist(void /* TODO */);
extern void  BestGuessActualsJeep(void /* TODO */);
extern void  MyCast(void /* TODO */);
extern void  FindVehicleNormalGiven4Points(void /* TODO */);
extern void  FindSurfaceRotXZFromNormal(void /* TODO */);
extern void  NuVecRotateZ(void /* TODO */);
extern void  NuPlnLine(void /* TODO */);
extern void  SolveQuadratic(void /* TODO */);
extern void  GenDebIndex(void /* TODO */);
extern void  GenDebIndexRadial(void /* TODO */);
extern void  GenDebIndexRadialRotor(void /* TODO */);
extern void  GenDebIndexSpheroid(void /* TODO */);
extern void  GenDebIndexBounceY(void /* TODO */);
extern void  AddChunkControlToStack(void /* TODO */);
extern void  GenDebIndexBounceXZ(void /* TODO */);
extern void  GenDebIndexPos(void /* TODO */);
extern void  GenDebIndexSort(void /* TODO */);
extern void  GenDebIndexPosRandTime(void /* TODO */);
extern void  GenDebIndexWaterFall(void /* TODO */);
extern void  GenDebIndexWaterFallSplash(void /* TODO */);
extern void  GenDebMomAdjFromPos(void /* TODO */);
extern void  GenDebMomAdjFromPosAll(void /* TODO */);
extern void  GenDebMomAdjFromPosRev(void /* TODO */);
extern void  GenDebMomAdjFromSplash(void /* TODO */);
extern void  GenDebMomAdjFromAshRock(void /* TODO */);
extern void  GenDebMomAdjFromPosRevTree(void /* TODO */);
extern void  CreateCopyMat(void /* TODO */);
extern void  SetupDebris(void /* TODO */);
extern void  DebAlloc(void /* TODO */);
extern void  DebReAlloc2(void /* TODO */);
extern void  DebReAlloc(void /* TODO */);
extern void  RemoveChunkControlFromStack(void /* TODO */);
extern void  DebFreeInstantly(void /* TODO */);
extern void  FindDebrisEffectStack(void /* TODO */);
extern void  RemoveDebrisEffectFromStack(void /* TODO */);
extern void  DebFreeWithoutKey(void /* TODO */);
extern void  DebrisEmiterPos(void /* TODO */);
extern void  DebrisOrientation(void /* TODO */);
extern void  DebrisEmitterOrientationMtx(void /* TODO */);
extern void  DebrisReflectionOrientation(void /* TODO */);
extern void  DebrisStartOffset(void /* TODO */);
extern void  DebrisSetTrigger(void /* TODO */);
extern void  DebrisSetGroupID(void /* TODO */);
extern void  AddDebrisEffectToStack(void /* TODO */);
extern void  CameraEmitterDistance(void /* TODO */);
extern void  AddVariableShotDebrisEffectMtx(void /* TODO */);
extern void  DebrisDoSounds(void /* TODO */);
extern void  randy(void /* TODO */);
extern void  GenericDebinfoDmaTypeUpdate(void /* TODO */);
extern void  CreateAlphaBlendTexture256_32(void /* TODO */);
extern void  CreateDmaParticleSet(void /* TODO */);
extern void  CreateDmaPartEffectList(void /* TODO */);
extern void  LinkDmaParticalSets(void /* TODO */);
extern void  NuCameraClipTestExtents(void /* TODO */);
extern void  NuRndrParticleGroup(void /* TODO */);
extern void  NuMtxInvRSS(void /* TODO */);
extern void  FindPlatInst(void /* TODO */);
extern void  PlatInstBounce(void /* TODO */);
extern void  NuWindCreate(void /* TODO */);
extern void  reverse_endian_32(void /* TODO */);
extern void  PlatImpactInfo(void /* TODO */);
extern void  NuAnimDataCalcTime(void /* TODO */);
extern void  NuAnimCurveSetApplyToMatrix(void /* TODO */);
extern void  NewPlatInst(void /* TODO */);
extern void  UpdatePlatinst(void /* TODO */);
extern void  PlatInstRotate(void /* TODO */);
extern void  NuAnimDataCreate(void /* TODO */);
extern void  NuAnimDataChunkCreate(void /* TODO */);
extern void  NuAnimCurveSetCreate(void /* TODO */);
extern void  NuAnimCurveCreate(void /* TODO */);
extern void  NuAnimCurveDestroy(void /* TODO */);
extern void  FileLoadSingleEffectType(void /* TODO */);
extern void  instNuGCutSceneEnd(void /* TODO */);
extern void  NuGCutLocatorCalcMtx(void /* TODO */);
extern void  CalculateLocatorDirection(void /* TODO */);
extern void  NuCameraDistSqr(void /* TODO */);
extern void  NuAnimData2FixPtrs(void /* TODO */);
extern void  NuAnimCurve2SetApplyToMatrix(void /* TODO */);
extern void  NuFsign(void /* TODO */);
extern void  NuMtxLookAtZ(void /* TODO */);
extern void  NuAnimCurve2CalcVal(void /* TODO */);
extern void  NuMtxPreTranslate(void /* TODO */);
extern void  NuAtan2(void /* TODO */);
extern void  NuAngSub(void /* TODO */);
extern void  NuBridgeAlloc(void /* TODO */);
extern void  NuBridgeLookupInstanceIndex(void /* TODO */);
extern void  ropesegment(void /* TODO */);
extern void  NuBrdigeDrawRope(void /* TODO */);
extern void  PlatInstGetHit(void /* TODO */);
extern void  NuRndrStrip3d(void /* TODO */);
extern void  NuVec4MtxTransformVU0(void /* TODO */);
extern void  NuWindRand(void /* TODO */);
extern void  NuWindAllocateGrp(void /* TODO */);
extern void  NuWindFreeGrp(void /* TODO */);
extern void  NuWindAllocMtxs(void /* TODO */);
extern void  NuWindFreeMtxs(void /* TODO */);
extern void  NuRndrGrassGobj(void /* TODO */);
extern void  ReadTerrain(void /* TODO */);
extern void  TerrFlush(void /* TODO */);
extern void  DerotateMovementVector(void /* TODO */);
extern void  RotateVec(void /* TODO */);
extern void  DeRotateTerrain(void /* TODO */);
extern void  DeRotatePoint(void /* TODO */);
extern void  InsideLineF(void /* TODO */);
extern void  InsidePolLines(void /* TODO */);
extern void  ScanTerrId(void /* TODO */);
extern void  AllocTerrId(void /* TODO */);
extern void  NewScan(void /* TODO */);
extern void  NewScanRot(void /* TODO */);
extern void  NewCast(void /* TODO */);
extern void  CheckCylinder(void /* TODO */);
extern void  CheckSphere(void /* TODO */);
extern void  CheckSphereTer(void /* TODO */);
extern void  HitPoly(void /* TODO */);
extern void  HitWallSpline(void /* TODO */);
extern void  HitTerrain(void /* TODO */);
extern void  ScanTerrain(void /* TODO */);
extern void  FullDeflect(void /* TODO */);
extern void  FullDeflectTest(void /* TODO */);
extern void  TerrainMoveImpactData(void /* TODO */);
extern void  TerrainImpactNorm(void /* TODO */);
extern void  PlatformConnect(void /* TODO */);
extern void  TerrainImpact(void /* TODO */);
extern void  TerrainImpactPlatform(void /* TODO */);
extern void  TerrainPlatformMoveCheck(void /* TODO */);
extern void  TerrainPlatformEmbedded(void /* TODO */);
extern void  StorePlatImpact(void /* TODO */);
extern void  PlatformChecks(void /* TODO */);
extern void  TerrainSideClamp(void /* TODO */);
extern void  TerrShapeSideStep(void /* TODO */);
extern void  RayImpact(void /* TODO */);
extern void  NewScanHandelFull(void /* TODO */);
extern void  NewScanHandelSubset(void /* TODO */);
extern void  ScanTerrainHandel(void /* TODO */);
extern void  ScanTerrainPlatform(void /* TODO */);
extern void  NuScratchAlloc32(void /* TODO */);
extern void  NuVec4MtxInvTransform(void /* TODO */);
extern void  NuScratchRelease(void /* TODO */);
extern void  buildBitCountTable(void /* TODO */);
extern void  NuAnimDataRead(void /* TODO */);
extern void  NuAnimDataDestroy(void /* TODO */);
extern void  NuAnimDataChunkDestroy(void /* TODO */);
extern void  NuAnimCurveSetDestroy(void /* TODO */);
extern void  NuAnimCurveCalcVal2(void /* TODO */);
extern void  NuAnimCurve2SetApplyToJoint(void /* TODO */);
extern void  NuAnimCurve2SetApplyToJointBasic(void /* TODO */);
extern void  NuAnimCurveSetApplyToJoint2(void /* TODO */);
extern void  NuAnimCurveSetApplyToJointBasic(void /* TODO */);
extern void  NuAnimCurveSetApplyBlendToJoint2(void /* TODO */);
extern void  NuAnimDataFixPtrs(void /* TODO */);
extern void  okdokey(void /* TODO */);
extern void  NuFdiv(void /* TODO */);
extern void  NuFpDiv(void /* TODO */);
extern void  NuCameraCalcFrustrumPlanes(void /* TODO */);
extern void  NuCameraGetViewMtx(void /* TODO */);
extern void  NuCameraGetProjectionMtx(void /* TODO */);
extern void  NuCameraGetVPCSMtx(void /* TODO */);
extern void  NuCameraTransformView(void /* TODO */);
extern void  NuCameraTransformClip(void /* TODO */);
extern void  NuCameraClipTestBoundingSphere(void /* TODO */);
extern void  NuVpGetClippingMtx(void /* TODO */);
extern void  NuVpGetScalingMtx(void /* TODO */);
extern void  NuMtxMulH(void /* TODO */);
extern void  NuMtxInvH(void /* TODO */);
extern void  NuVecMtxTransformH(void /* TODO */);
extern void  NuVec4MtxTransform(void /* TODO */);
extern void  NuPs2CreateSkinNorm(void /* TODO */);
extern void  NuPs2CreateSkin(void /* TODO */);
extern void  NuPrimDestroy(void /* TODO */);
extern void  GetGlassSpecularTexId(void /* TODO */);
extern void  InitOverrideMtl(void /* TODO */);
extern void  NuGlassLoad(void /* TODO */);
extern void  NuGlassInit(void /* TODO */);
extern void  NuGlassClose(void /* TODO */);
extern void  DrawGlassCreatures(void /* TODO */);
extern void  NuTexReadBitmapMM(void /* TODO */);
extern void  NudxFw_GetBackBufferCopyTID(void /* TODO */);
extern void  NuShaderSetGlassMix(void /* TODO */);
extern void  NuGobjClose(void /* TODO */);
extern void  NuGeomDestroy(void /* TODO */);
extern void  NuGobjAddGeom(void /* TODO */);
extern void  NuGobjAddFaceOnGeom(void /* TODO */);
extern void  NuGobjCalcFaceOnDims(void /* TODO */);
extern void  NuFaceOnGeomCreate(void /* TODO */);
extern void  NuGeomDestroyVB(void /* TODO */);
extern void  NuGeomAddPrim(void /* TODO */);
extern void  NuGeomAddSkin(void /* TODO */);
extern void  NuAnimUV(void /* TODO */);
extern void  makenuvec(void /* TODO */);
extern void  NuMtlUVAnimation(void /* TODO */);
extern void  NuHazeCreateDepthTexture(void /* TODO */);
extern void  NuHazeInit(void /* TODO */);
extern void  NuHazeClose(void /* TODO */);
extern void  NuHazeSetHazeConstants(void /* TODO */);
extern void  NuTexCreateFromSurface(void /* TODO */);
extern void  NudxFw_SetRenderTargetSurface(void /* TODO */);
extern void  NuMtlSetRenderStates(void /* TODO */);
extern void  NuTexSetTextureStates(void /* TODO */);
extern void  SetupShaders(void /* TODO */);
extern void  NuTexSetTexture(void /* TODO */);
extern void  NuHGobjLoad(void /* TODO */);
extern void  NuTexAnimRemoveList(void /* TODO */);
extern void  ReadNuIFFNameTable(void /* TODO */);
extern void  ReadNuIFFTextureSet(void /* TODO */);
extern void  ReadNuIFFMaterialSet(void /* TODO */);
extern void  ReadNuIFFTexAnimSet(void /* TODO */);
extern void  ReadNuIFFUnknown(void /* TODO */);
extern void  NuSceneMtlUpdate(void /* TODO */);
extern void  ReadNuIFFGeom(void /* TODO */);
extern void  NuLightClose(void /* TODO */);
extern void  NuLightCreate(void /* TODO */);
extern void  NuLightUpdate(void /* TODO */);
extern void  NuLightGetLight(void /* TODO */);
extern void  NuLightStoreCurrentLights(void /* TODO */);
extern void  NuLightSetStoredLights(void /* TODO */);
extern void  NuLightClearStoredLights(void /* TODO */);
extern void  NuLgtRand(void /* TODO */);
extern void  NuLgtArcLaserDraw(void /* TODO */);
extern void  NuMtxAlignZ(void /* TODO */);
extern void  NuVec4Scale(void /* TODO */);
extern void  NuRndrTri2d(void /* TODO */);
extern void  NuMtlClose(void /* TODO */);
extern void  NuMtlNum(void /* TODO */);
extern void  NuMtlGet(void /* TODO */);
extern void  NuMtlRead(void /* TODO */);
extern void  NuMtlAddRndrItem(void /* TODO */);
extern void  NuMtlAddFaceonItem(void /* TODO */);
extern void  NuMtlGet2dBuffer(void /* TODO */);
extern void  NuMtlGet3dBuffer(void /* TODO */);
extern void  NuMtlRender(void /* TODO */);
extern void  NuMtlClearOt(void /* TODO */);
extern void  NuTexUnRef(void /* TODO */);
extern void  NuRndrItemDist(void /* TODO */);
extern void  DrawStencilShadowQuad(void /* TODO */);
extern void  NuRndrItem(void /* TODO */);
extern void  ResetShaders(void /* TODO */);
extern void  SetVertexShader(void /* TODO */);
extern void  NuMtxCalcCheapFaceOn(void /* TODO */);
extern void  NudxFw_SetRenderState(void /* TODO */);
extern void  NuRndrInit(void /* TODO */);
extern void  NuRndrFlush(void /* TODO */);
extern void  NuRndrGobjSkin2(void /* TODO */);
extern void  NuRndrTri3d(void /* TODO */);
extern void  NuRndrFaceItem(void /* TODO */);
extern void  NuRndrAnglesZX(void /* TODO */);
extern void  NuRndrCreateBlendShapeDeformerWeightsArray(void /* TODO */);
extern void  NuRndrCreateBlendShapeDWAPointers(void /* TODO */);
extern void  NudxFw_BeginScene(void /* TODO */);
extern void  NudxFw_Clear(void /* TODO */);
extern void  NudxFw_SetBackBufferCopied(void /* TODO */);
extern void  NudxFw_FlipScreen(void /* TODO */);
extern void  NuShaderAssignShader(void /* TODO */);
extern void  NuShaderSetSkinningConstants(void /* TODO */);
extern void  SkinnedShader(void /* TODO */);
extern void  SkinnedShaderBlend(void /* TODO */);
extern void  ReadNuIFFGobjSet(void /* TODO */);
extern void  ReadNuIFFGeomDef(void /* TODO */);
extern void  NuGSceneDestroy(void /* TODO */);
extern void  ReadNuIFFInstSet(void /* TODO */);
extern void  NuTexImgSize(void /* TODO */);
extern void  NuTexPalSize(void /* TODO */);
extern void  NuTexGetDecalInfo(void /* TODO */);
extern void  NuMtxGetScale(void /* TODO */);
extern void  NuSceneAverageTextureSpaceVerts(void /* TODO */);
extern void  NuTexClose(void /* TODO */);
extern void  GetTPID(void /* TODO */);
extern void  NuTexPixelSize(void /* TODO */);
extern void  NuTexLoadTextureFromDDSFile(void /* TODO */);
extern void  NudxFw_DestroyBackBufferCopy(void /* TODO */);
extern void  NudxTx_Create(void /* TODO */);
extern void  NudxFw_SetTextureState(void /* TODO */);
extern void  NuTexAnimProgFind(void /* TODO */);
extern void  NuTexAnimProgInit(void /* TODO */);
extern void  NuTexAnimProgAssembleEnd(void /* TODO */);
extern void  NuTexAnimEnvCreate(void /* TODO */);
extern void  NuTexAnimEnvProc(void /* TODO */);
extern void  NuTexAnimProcessList(void /* TODO */);
extern void  NuTexAnimAddList(void /* TODO */);
extern void  NuFParGetWord(void /* TODO */);
extern void  NuFParGetInt(void /* TODO */);
extern void  NuFParCreate(void /* TODO */);
extern void  NuFParPushCom(void /* TODO */);
extern void  NuFParInterpretWord(void /* TODO */);
extern void  NuFParGetLine(void /* TODO */);
extern void  NuFParDestroy(void /* TODO */);
extern void  NuRand(void /* TODO */);
extern void  NuVpUpdate(void /* TODO */);
extern void  dynamicWaterGetNormalMap(void /* TODO */);
extern void  NuWaterLoad(void /* TODO */);
extern void  NuWaterInit(void /* TODO */);
extern void  NuWaterClose(void /* TODO */);
extern void  NuWaterSetup(void /* TODO */);
extern void  randyfloat(void /* TODO */);
extern void  NudxFw_GetBackBuffer(void /* TODO */);
extern void  NudxFw_GetZBuffer(void /* TODO */);
extern void  NuSetShaderState(void /* TODO */);
extern void  _assert(void /* TODO */);
extern void  checkmemfile(void /* TODO */);
extern void  checkdiscfile(void /* TODO */);
extern void  GCFileSize(void /* TODO */);
extern void  NuGetChar(void /* TODO */);
extern void  NuFParClose(void /* TODO */);
extern void  NuFParOpen(void /* TODO */);
extern void  NuMtxTranspose(void /* TODO */);
extern void  NuMtxCalcDebrisFaceOn(void /* TODO */);
extern void  NudxFw_Init(void /* TODO */);
extern void  NuSoundFindLoopInfo(void /* TODO */);
extern void  NuSoundInitLoopInfo(void /* TODO */);
extern void  PlayStream(void /* TODO */);
extern void  makenuvec4(void /* TODO */);
extern void  LoadWaterCausticTextures(void /* TODO */);
extern void  RemoveWaterCausticTextures(void /* TODO */);
extern void  DeadZoneValue(void /* TODO */);
extern void  renderpsdma(void /* TODO */);
extern void  DebMtxTransform(void /* TODO */);
extern void  NuGobjAverageTextureSpaceVerts(void /* TODO */);
extern void  RumbleController(void /* TODO */);
extern void  XInputGetState(void /* TODO */);
extern void  initd3d(void /* TODO */);
extern void  QueryPerformanceFrequency(void /* TODO */);
extern void  QueryPerformanceCounter(void /* TODO */);
extern void  InitialiseShaders(void /* TODO */);
extern void  CloseShaders(void /* TODO */);
extern void  VecMatMulAndWeight(void /* TODO */);
extern void  VecMatMulAndWeight1(void /* TODO */);
extern void  VecMatMulAddAndWeight(void /* TODO */);
extern void  VecMatMulAndWeight3(void /* TODO */);
extern void  VecMatMulAndWeight2(void /* TODO */);
extern void  GCFileOpen(void /* TODO */);
extern void  GCFileRead(void /* TODO */);
extern void  GCFileClose(void /* TODO */);
extern void  StreamClear(void /* TODO */);
extern void  DisplayErrorAndLockup(void /* TODO */);
extern void  PADControlAllMotors(void /* TODO */);
extern void  PadCheck(void /* TODO */);
extern void  PADRead(void /* TODO */);
extern void  PADClamp(void /* TODO */);
extern void  PADReset(void /* TODO */);
extern void  C_MTXOrtho(void /* TODO */);
extern void  PSMTXIdentity(void /* TODO */);
extern void  PADInit(void /* TODO */);
extern void  PSMTXScale(void /* TODO */);
extern void  TTLLights(void /* TODO */);
extern void  TimerGetFPS(void /* TODO */);
extern void  C_MTXPerspective(void /* TODO */);
extern void  MatReorder(void /* TODO */);
extern void  PSMTXInverse(void /* TODO */);
extern void  PSMTXTranspose(void /* TODO */);
extern void  SetIdentity(void /* TODO */);
extern void  MatMult(void /* TODO */);
extern void  DCFlushRange(void /* TODO */);
extern void  timeGetTime(void /* TODO */);
extern void  MC_Check(void /* TODO */);
extern void  TEXGet(void /* TODO */);
extern void  DCInvalidateRange(void /* TODO */);
extern void  SetPixelShader(void /* TODO */);
extern void  GetPlayerPosition(void /* TODO */);
extern void  NuShaderSetColourConstants(void /* TODO */);
extern void  NuShaderSetLightConstants(void /* TODO */);
extern void  UnSetupShaders(void /* TODO */);
extern void  read(void /* TODO */);
extern void  __mod2i(void /* TODO */);
extern void  sbrk(void /* TODO */);
extern void  __init_hardware(void /* TODO */);
extern void  SNDebugInit(void /* TODO */);
extern void  __sn_serialp(void /* TODO */);
extern void  _write(void /* TODO */);
extern void  InitializeUART(void /* TODO */);
extern void  WriteUARTN(void /* TODO */);
extern void  PCwrite(void /* TODO */);
extern void  PCclose(void /* TODO */);
extern void  PClseek(void /* TODO */);
extern void  PCread(void /* TODO */);
extern void  PCcreat(void /* TODO */);
extern void  PCopen(void /* TODO */);
extern void  PCinit(void /* TODO */);
extern void  snFileserver(void /* TODO */);
extern void  snInitFileserver(void /* TODO */);
extern void  cmdGo(void /* TODO */);
extern void  cmdNop(void /* TODO */);
extern void  cmdRecvMem(void /* TODO */);
extern void  cmdSendMem(void /* TODO */);
extern void  EnableMetroTRKInterrupts(void /* TODO */);
extern void  ISIentry(void /* TODO */);
extern void  DSIentry(void /* TODO */);
extern void  __RAS_OSDisableInterrupts_begin(void /* TODO */);
extern void  __RAS_OSDisableInterrupts_end(void /* TODO */);
extern void  PPCHalt(void /* TODO */);
extern void  ICInvalidateRange(void /* TODO */);
extern void  __cvt_fp2unsigned(void /* TODO */);
extern void  __shr2u(void /* TODO */);
extern void  __div2i(void /* TODO */);
extern void  __shl2i(void /* TODO */);
extern void  __shr2i(void /* TODO */);
extern void  __div2u(void /* TODO */);
extern void  __mod2u(void /* TODO */);
extern void  __va_arg(void /* TODO */);
extern void  __divdi3(void /* TODO */);
extern void  __moddi3(void /* TODO */);
extern void  __ashrdi3(void /* TODO */);
extern void  __udivdi3(void /* TODO */);
extern void  __umoddi3(void /* TODO */);
extern void  __kernel_cos(void /* TODO */);
extern void  __ieee754_rem_pio2(void /* TODO */);
extern void  __kernel_sin(void /* TODO */);
extern void  __kernel_tan(void /* TODO */);
extern void  __kernel_rem_pio2(void /* TODO */);
extern void  _strtol_r(void /* TODO */);
extern void  _vfprintf_r(void /* TODO */);
extern void  strround(void /* TODO */);
extern void  strrev(void /* TODO */);
extern void  fftoa(void /* TODO */);
extern void  localeconv(void /* TODO */);
extern void  _mbtowc_r(void /* TODO */);
extern void  _localeconv_r(void /* TODO */);
extern void  __do_global_ctors(void /* TODO */);
extern void  PPCSync(void /* TODO */);
extern void  DCFlushRangeNoSync(void /* TODO */);
extern void  ICFlashInvalidate(void /* TODO */);
extern void  DCEnable(void /* TODO */);
extern void  DCStoreRange(void /* TODO */);
extern void  ICEnable(void /* TODO */);
extern void  LCDisable(void /* TODO */);
extern void  L2GlobalInvalidate(void /* TODO */);
extern void  DMAErrorHandler(void /* TODO */);
extern void  __PADDisableRecalibration(void /* TODO */);
extern void  __fstLoad(void /* TODO */);
extern void  PADSetSpec(void /* TODO */);
extern void  PADSetSamplingCallback(void /* TODO */);
extern void  __GetImageTileCount(void /* TODO */);
extern void  __kernel_cosf(void /* TODO */);
extern void  __ieee754_rem_pio2f(void /* TODO */);
extern void  __kernel_sinf(void /* TODO */);
extern void  __kernel_tanf(void /* TODO */);
extern void  __kernel_rem_pio2f(void /* TODO */);
extern void  scalbnf(void /* TODO */);
#endif
