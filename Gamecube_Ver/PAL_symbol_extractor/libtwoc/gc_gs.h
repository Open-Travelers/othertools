#ifndef _gc_gs_h_
#define _gc_gs_h_
#include "common.h"
extern unk GS_FrameBufferCopydataptr;
extern unk GS_Parallax;
extern unk GS_CurrentVertDesc;
extern unk GS_WorldMatIsIdentity;
extern unk GS_IsNewFrame;
extern unk GS_CopyEFBFlag;
extern unk GS_FrameBufferCopyPause;
extern unk GS_ForceNoAlphaCompareFlag;
extern unk GS_FrameBufferCopySize;
extern unk GS_CommandBuffer;
extern unk GS_MatProjection;
extern unk GS_MatView;
extern unk GS_ViewIdentity;
extern unk GS_MatWorld;
extern unk GS_CurrentTexture;
extern unk GS_MaterialSourceAmbient;
extern unk GS_MaterialSourceEmissive;
extern unk GS_EnableColorVertexFlag;
extern unk GS_EnableSpecularFlag;
extern unk GS_EnableLightingFlag;
extern unk GS_CurrentMaterial;
extern unk GS_CurrentMaterialAmbient;
extern unk GS_CurrentMaterialDiffuse;
extern unk GS_CurrentMaterialDiffuseGX;
extern unk GS_CurrentMaterialEmissive;
extern unk GS_CurrentMaterialEmissivergba;
extern unk GS_CurrentMaterialEmissiveGX;
extern unk GS_CurMat;
extern unk GS_LightMat;
extern unk GS_LightViewMat;
extern unk GSLights;
extern unk GS_ForceNoClip;
extern unk GS_VERTDESC;
extern unk GS_TexAllocs;
extern unk GS_BufferSize;
extern unk GS_SkinVertexSource;
extern unk GS_BlendSource;
extern void GS_CopyFBToPause(void /* TODO */);
extern void GS_Init(void /* TODO */);
extern void GS_SetAlphaCompareForce(void /* TODO */);
extern void GS_SetViewMatrix(void /* TODO */);
extern void GS_SetProjectionMatrix(void /* TODO */);
extern void GS_CreateBuffer(void /* TODO */);
extern void GS_DeleteBuffer(void /* TODO */);
extern void GS_DrawTriStripTTL(void /* TODO */);
extern void GS_SetLight(void /* TODO */);
extern void GS_LightEnable(void /* TODO */);
extern void GS_SetupFog(void /* TODO */);
extern void GS_SetAlphaCompare(void /* TODO */);
extern void GS_SetZCompare(void /* TODO */);
extern void GS_EnableLighting(void /* TODO */);
extern void GS_LoadWorldMatrixIdentity(void /* TODO */);
extern void GS_DrawQuadListBeginBlock(void /* TODO */);
extern void GS_SetQuadListRGBA(void /* TODO */);
extern void GS_DrawQuadListSetVert(void /* TODO */);
extern void GS_DrawQuadListEndBlock(void /* TODO */);
extern void GS_SetMaterialSourceEmissive(void /* TODO */);
extern void GS_SetBlendSrc(void /* TODO */);
extern void GS_SetMaterial(void /* TODO */);
extern void GS_EnableSpecular(void /* TODO */);
extern void GS_EnableColorVertex(void /* TODO */);
extern void GS_SetMaterialSourceAmbient(void /* TODO */);
extern void GS_EndScene(void /* TODO */);
extern void GS_SetWorldMatrix(void /* TODO */);
extern void GS_DrawTriList(void /* TODO */);
extern void GS_DrawPrimitiveQuad(void /* TODO */);
extern void GS_DrawPointList(void /* TODO */);
extern void GS_DrawTriStrip(void /* TODO */);
extern void GS_DrawQuadList(void /* TODO */);
extern void GS_DrawIndexedTriList(void /* TODO */);
extern void GS_DrawIndexedTriStrip(void /* TODO */);
extern void GS_SetVertexSource(void /* TODO */);
extern void GS_SetBlendSource(void /* TODO */);
extern void GS_ARGBTORGBA(void /* TODO */);
extern void GS_TexReInit(void /* TODO */);
extern void GS_TexSetWrapModes(void /* TODO */);
extern void GS_TexSetWrapModet(void /* TODO */);
extern void GS_TexSelect(void /* TODO */);
extern void GS_GetViewport(void /* TODO */);
extern void GS_SetViewport(void /* TODO */);
extern void GS_CopyTextureFromFB(void /* TODO */);
extern void GS_RenderClear(void /* TODO */);
extern void GS_FlipScreen(void /* TODO */);
extern void GS_BeginScene(void /* TODO */);
extern void GS_SetRenderState(void /* TODO */);
extern void GS_SetTextureStageState(void /* TODO */);
extern void GS_DrawFade(void /* TODO */);
extern void GS_SetOrthMatrix(void /* TODO */);
extern void GS_DrawTriListTTL(void /* TODO */);
extern void GS_RenderClearBlack(void /* TODO */);
extern void GS_SetFBCopyTexturePause(void /* TODO */);
extern void GS_SetBlendSrc2(void /* TODO */);
extern void GS_SetLightingMatrix(void /* TODO */);
extern void GS_SetLightingMatrix2(void /* TODO */);
extern void GS_LoadMatrix(void /* TODO */);
extern void GS_TexInit(void /* TODO */);
extern void GS_InitVertexDescriptors(void /* TODO */);
extern void GS_InitXForm(void /* TODO */);
extern void GS_XFormLightVec(void /* TODO */);
extern void GS_SetLightingNone(void /* TODO */);
extern void GS_SetPointLighting(void /* TODO */);
extern void GS_Set3Lights(void /* TODO */);
extern void GS_DrawTriListTSkin(void /* TODO */);
extern void GS_TexSwizzleRGB5A3(void /* TODO */);
extern void GS_TexCreateNU(void /* TODO */);
extern void GS_ChangeTextureStates(void /* TODO */);
extern void GS_SetTevBlend(void /* TODO */);
extern void GS_SetTevModulate(void /* TODO */);
#endif
